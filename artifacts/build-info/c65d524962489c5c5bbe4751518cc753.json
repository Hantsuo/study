{
	"id": "c65d524962489c5c5bbe4751518cc753",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"TokenSell.sol": {
				"content": "//SPDX-License-Identifier: Unlicense\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract Tokensell{\r\n        uint256 public price = 1 * 10 * 18;\r\n        uint starttime;\r\n        uint endtime;\r\n    \r\n\r\n\r\n    address public axsToken = 0x0aa7726bc0cB085A3C4fbE3B09b91DD7E27f7fea;\r\n    mapping(address => uint) public _balance;\r\n\r\n    function launch(uint _starttime , uint _endtime)external view{\r\n        require(_starttime >= block.timestamp);\r\n        require(_endtime >= _starttime);\r\n        require(_endtime <= block.timestamp + 30 days);\r\n        \r\n    }\r\n    function pledge(address useAdd,uint amount) external view{\r\n        require(block.timestamp >= starttime);\r\n        require(block.timestamp <= endtime);\r\n        \r\n    }\r\n    \r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TokenSell.sol": {
				"Tokensell": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "axsToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_starttime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_endtime",
									"type": "uint256"
								}
							],
							"name": "launch",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "useAdd",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "pledge",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TokenSell.sol\":125:788  contract Tokensell{\r... */\n  mstore(0x40, 0x80)\n    /* \"TokenSell.sol\":177:188  1 * 10 * 18 */\n  0xb4\n    /* \"TokenSell.sol\":154:188  uint256 public price = 1 * 10 * 18 */\n  0x00\n  sstore\n    /* \"TokenSell.sol\":279:321  0x0aa7726bc0cB085A3C4fbE3B09b91DD7E27f7fea */\n  0x0aa7726bc0cb085a3c4fbe3b09b91dd7e27f7fea\n    /* \"TokenSell.sol\":253:321  address public axsToken = 0x0aa7726bc0cB085A3C4fbE3B09b91DD7E27f7fea */\n  0x03\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"TokenSell.sol\":125:788  contract Tokensell{\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"TokenSell.sol\":125:788  contract Tokensell{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x180dc0ac\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x743b3452\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x82760cd2\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa035b1fe\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xd3aceae2\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"TokenSell.sol\":253:321  address public axsToken = 0x0aa7726bc0cB085A3C4fbE3B09b91DD7E27f7fea */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenSell.sol\":610:779  function pledge(address useAdd,uint amount) external view{\r... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"TokenSell.sol\":377:604  function launch(uint _starttime , uint _endtime)external view{\r... */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"TokenSell.sol\":154:188  uint256 public price = 1 * 10 * 18 */\n    tag_6:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenSell.sol\":328:368  mapping(address => uint) public _balance */\n    tag_7:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenSell.sol\":253:321  address public axsToken = 0x0aa7726bc0cB085A3C4fbE3B09b91DD7E27f7fea */\n    tag_9:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"TokenSell.sol\":610:779  function pledge(address useAdd,uint amount) external view{\r... */\n    tag_15:\n        /* \"TokenSell.sol\":705:714  starttime */\n      sload(0x01)\n        /* \"TokenSell.sol\":686:701  block.timestamp */\n      timestamp\n        /* \"TokenSell.sol\":686:714  block.timestamp >= starttime */\n      lt\n      iszero\n        /* \"TokenSell.sol\":678:715  require(block.timestamp >= starttime) */\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n        /* \"TokenSell.sol\":753:760  endtime */\n      sload(0x02)\n        /* \"TokenSell.sol\":734:749  block.timestamp */\n      timestamp\n        /* \"TokenSell.sol\":734:760  block.timestamp <= endtime */\n      gt\n      iszero\n        /* \"TokenSell.sol\":726:761  require(block.timestamp <= endtime) */\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n        /* \"TokenSell.sol\":610:779  function pledge(address useAdd,uint amount) external view{\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"TokenSell.sol\":377:604  function launch(uint _starttime , uint _endtime)external view{\r... */\n    tag_19:\n        /* \"TokenSell.sol\":471:486  block.timestamp */\n      timestamp\n        /* \"TokenSell.sol\":457:467  _starttime */\n      dup3\n        /* \"TokenSell.sol\":457:486  _starttime >= block.timestamp */\n      lt\n      iszero\n        /* \"TokenSell.sol\":449:487  require(_starttime >= block.timestamp) */\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n        /* \"TokenSell.sol\":518:528  _starttime */\n      dup2\n        /* \"TokenSell.sol\":506:514  _endtime */\n      dup2\n        /* \"TokenSell.sol\":506:528  _endtime >= _starttime */\n      lt\n      iszero\n        /* \"TokenSell.sol\":498:529  require(_endtime >= _starttime) */\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n        /* \"TokenSell.sol\":578:585  30 days */\n      0x278d00\n        /* \"TokenSell.sol\":560:575  block.timestamp */\n      timestamp\n        /* \"TokenSell.sol\":560:585  block.timestamp + 30 days */\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"TokenSell.sol\":548:556  _endtime */\n      dup2\n        /* \"TokenSell.sol\":548:585  _endtime <= block.timestamp + 30 days */\n      gt\n      iszero\n        /* \"TokenSell.sol\":540:586  require(_endtime <= block.timestamp + 30 days) */\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n        /* \"TokenSell.sol\":377:604  function launch(uint _starttime , uint _endtime)external view{\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"TokenSell.sol\":154:188  uint256 public price = 1 * 10 * 18 */\n    tag_21:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"TokenSell.sol\":328:368  mapping(address => uint) public _balance */\n    tag_27:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_39:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_41\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_43:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_45\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:626   */\n    tag_26:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:492   */\n      iszero\n      tag_48\n      jumpi\n        /* \"#utility.yul\":411:490   */\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":373:492   */\n    tag_48:\n        /* \"#utility.yul\":531:532   */\n      0x00\n        /* \"#utility.yul\":556:609   */\n      tag_51\n        /* \"#utility.yul\":601:608   */\n      dup5\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup6\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_39\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":502:619   */\n      pop\n        /* \"#utility.yul\":297:626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:1106   */\n    tag_14:\n        /* \"#utility.yul\":700:706   */\n      0x00\n        /* \"#utility.yul\":708:714   */\n      dup1\n        /* \"#utility.yul\":757:759   */\n      0x40\n        /* \"#utility.yul\":745:754   */\n      dup4\n        /* \"#utility.yul\":736:743   */\n      dup6\n        /* \"#utility.yul\":732:755   */\n      sub\n        /* \"#utility.yul\":728:760   */\n      slt\n        /* \"#utility.yul\":725:844   */\n      iszero\n      tag_53\n      jumpi\n        /* \"#utility.yul\":763:842   */\n      tag_54\n      tag_50\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":725:844   */\n    tag_53:\n        /* \"#utility.yul\":883:884   */\n      0x00\n        /* \"#utility.yul\":908:961   */\n      tag_55\n        /* \"#utility.yul\":953:960   */\n      dup6\n        /* \"#utility.yul\":944:950   */\n      dup3\n        /* \"#utility.yul\":933:942   */\n      dup7\n        /* \"#utility.yul\":929:951   */\n      add\n        /* \"#utility.yul\":908:961   */\n      tag_39\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":898:961   */\n      swap3\n      pop\n        /* \"#utility.yul\":854:971   */\n      pop\n        /* \"#utility.yul\":1010:1012   */\n      0x20\n        /* \"#utility.yul\":1036:1089   */\n      tag_56\n        /* \"#utility.yul\":1081:1088   */\n      dup6\n        /* \"#utility.yul\":1072:1078   */\n      dup3\n        /* \"#utility.yul\":1061:1070   */\n      dup7\n        /* \"#utility.yul\":1057:1079   */\n      add\n        /* \"#utility.yul\":1036:1089   */\n      tag_43\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1026:1089   */\n      swap2\n      pop\n        /* \"#utility.yul\":981:1099   */\n      pop\n        /* \"#utility.yul\":632:1106   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1112:1586   */\n    tag_18:\n        /* \"#utility.yul\":1180:1186   */\n      0x00\n        /* \"#utility.yul\":1188:1194   */\n      dup1\n        /* \"#utility.yul\":1237:1239   */\n      0x40\n        /* \"#utility.yul\":1225:1234   */\n      dup4\n        /* \"#utility.yul\":1216:1223   */\n      dup6\n        /* \"#utility.yul\":1212:1235   */\n      sub\n        /* \"#utility.yul\":1208:1240   */\n      slt\n        /* \"#utility.yul\":1205:1324   */\n      iszero\n      tag_58\n      jumpi\n        /* \"#utility.yul\":1243:1322   */\n      tag_59\n      tag_50\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1205:1324   */\n    tag_58:\n        /* \"#utility.yul\":1363:1364   */\n      0x00\n        /* \"#utility.yul\":1388:1441   */\n      tag_60\n        /* \"#utility.yul\":1433:1440   */\n      dup6\n        /* \"#utility.yul\":1424:1430   */\n      dup3\n        /* \"#utility.yul\":1413:1422   */\n      dup7\n        /* \"#utility.yul\":1409:1431   */\n      add\n        /* \"#utility.yul\":1388:1441   */\n      tag_43\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1378:1441   */\n      swap3\n      pop\n        /* \"#utility.yul\":1334:1451   */\n      pop\n        /* \"#utility.yul\":1490:1492   */\n      0x20\n        /* \"#utility.yul\":1516:1569   */\n      tag_61\n        /* \"#utility.yul\":1561:1568   */\n      dup6\n        /* \"#utility.yul\":1552:1558   */\n      dup3\n        /* \"#utility.yul\":1541:1550   */\n      dup7\n        /* \"#utility.yul\":1537:1559   */\n      add\n        /* \"#utility.yul\":1516:1569   */\n      tag_43\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1506:1569   */\n      swap2\n      pop\n        /* \"#utility.yul\":1461:1579   */\n      pop\n        /* \"#utility.yul\":1112:1586   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1592:1710   */\n    tag_62:\n        /* \"#utility.yul\":1679:1703   */\n      tag_64\n        /* \"#utility.yul\":1697:1702   */\n      dup2\n        /* \"#utility.yul\":1679:1703   */\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1674:1677   */\n      dup3\n        /* \"#utility.yul\":1667:1704   */\n      mstore\n        /* \"#utility.yul\":1592:1710   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1716:1834   */\n    tag_66:\n        /* \"#utility.yul\":1803:1827   */\n      tag_68\n        /* \"#utility.yul\":1821:1826   */\n      dup2\n        /* \"#utility.yul\":1803:1827   */\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1798:1801   */\n      dup3\n        /* \"#utility.yul\":1791:1828   */\n      mstore\n        /* \"#utility.yul\":1716:1834   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1840:2062   */\n    tag_11:\n        /* \"#utility.yul\":1933:1937   */\n      0x00\n        /* \"#utility.yul\":1971:1973   */\n      0x20\n        /* \"#utility.yul\":1960:1969   */\n      dup3\n        /* \"#utility.yul\":1956:1974   */\n      add\n        /* \"#utility.yul\":1948:1974   */\n      swap1\n      pop\n        /* \"#utility.yul\":1984:2055   */\n      tag_71\n        /* \"#utility.yul\":2052:2053   */\n      0x00\n        /* \"#utility.yul\":2041:2050   */\n      dup4\n        /* \"#utility.yul\":2037:2054   */\n      add\n        /* \"#utility.yul\":2028:2034   */\n      dup5\n        /* \"#utility.yul\":1984:2055   */\n      tag_62\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1840:2062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2068:2290   */\n    tag_23:\n        /* \"#utility.yul\":2161:2165   */\n      0x00\n        /* \"#utility.yul\":2199:2201   */\n      0x20\n        /* \"#utility.yul\":2188:2197   */\n      dup3\n        /* \"#utility.yul\":2184:2202   */\n      add\n        /* \"#utility.yul\":2176:2202   */\n      swap1\n      pop\n        /* \"#utility.yul\":2212:2283   */\n      tag_73\n        /* \"#utility.yul\":2280:2281   */\n      0x00\n        /* \"#utility.yul\":2269:2278   */\n      dup4\n        /* \"#utility.yul\":2265:2282   */\n      add\n        /* \"#utility.yul\":2256:2262   */\n      dup5\n        /* \"#utility.yul\":2212:2283   */\n      tag_66\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2068:2290   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2377:2682   */\n    tag_36:\n        /* \"#utility.yul\":2417:2420   */\n      0x00\n        /* \"#utility.yul\":2436:2456   */\n      tag_77\n        /* \"#utility.yul\":2454:2455   */\n      dup3\n        /* \"#utility.yul\":2436:2456   */\n      tag_69\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2431:2456   */\n      swap2\n      pop\n        /* \"#utility.yul\":2470:2490   */\n      tag_78\n        /* \"#utility.yul\":2488:2489   */\n      dup4\n        /* \"#utility.yul\":2470:2490   */\n      tag_69\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2465:2490   */\n      swap3\n      pop\n        /* \"#utility.yul\":2624:2625   */\n      dup3\n        /* \"#utility.yul\":2556:2622   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2552:2626   */\n      sub\n        /* \"#utility.yul\":2549:2550   */\n      dup3\n        /* \"#utility.yul\":2546:2627   */\n      gt\n        /* \"#utility.yul\":2543:2650   */\n      iszero\n      tag_79\n      jumpi\n        /* \"#utility.yul\":2630:2648   */\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2543:2650   */\n    tag_79:\n        /* \"#utility.yul\":2674:2675   */\n      dup3\n        /* \"#utility.yul\":2671:2672   */\n      dup3\n        /* \"#utility.yul\":2667:2676   */\n      add\n        /* \"#utility.yul\":2660:2676   */\n      swap1\n      pop\n        /* \"#utility.yul\":2377:2682   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2688:2784   */\n    tag_65:\n        /* \"#utility.yul\":2725:2732   */\n      0x00\n        /* \"#utility.yul\":2754:2778   */\n      tag_83\n        /* \"#utility.yul\":2772:2777   */\n      dup3\n        /* \"#utility.yul\":2754:2778   */\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":2743:2778   */\n      swap1\n      pop\n        /* \"#utility.yul\":2688:2784   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2790:2916   */\n    tag_84:\n        /* \"#utility.yul\":2827:2834   */\n      0x00\n        /* \"#utility.yul\":2867:2909   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2860:2865   */\n      dup3\n        /* \"#utility.yul\":2856:2910   */\n      and\n        /* \"#utility.yul\":2845:2910   */\n      swap1\n      pop\n        /* \"#utility.yul\":2790:2916   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2922:2999   */\n    tag_69:\n        /* \"#utility.yul\":2959:2966   */\n      0x00\n        /* \"#utility.yul\":2988:2993   */\n      dup2\n        /* \"#utility.yul\":2977:2993   */\n      swap1\n      pop\n        /* \"#utility.yul\":2922:2999   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3005:3185   */\n    tag_81:\n        /* \"#utility.yul\":3053:3130   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3050:3051   */\n      0x00\n        /* \"#utility.yul\":3043:3131   */\n      mstore\n        /* \"#utility.yul\":3150:3154   */\n      0x11\n        /* \"#utility.yul\":3147:3148   */\n      0x04\n        /* \"#utility.yul\":3140:3155   */\n      mstore\n        /* \"#utility.yul\":3174:3178   */\n      0x24\n        /* \"#utility.yul\":3171:3172   */\n      0x00\n        /* \"#utility.yul\":3164:3179   */\n      revert\n        /* \"#utility.yul\":3314:3431   */\n    tag_50:\n        /* \"#utility.yul\":3423:3424   */\n      0x00\n        /* \"#utility.yul\":3420:3421   */\n      dup1\n        /* \"#utility.yul\":3413:3425   */\n      revert\n        /* \"#utility.yul\":3437:3559   */\n    tag_42:\n        /* \"#utility.yul\":3510:3534   */\n      tag_92\n        /* \"#utility.yul\":3528:3533   */\n      dup2\n        /* \"#utility.yul\":3510:3534   */\n      tag_65\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":3503:3508   */\n      dup2\n        /* \"#utility.yul\":3500:3535   */\n      eq\n        /* \"#utility.yul\":3490:3553   */\n      tag_93\n      jumpi\n        /* \"#utility.yul\":3549:3550   */\n      0x00\n        /* \"#utility.yul\":3546:3547   */\n      dup1\n        /* \"#utility.yul\":3539:3551   */\n      revert\n        /* \"#utility.yul\":3490:3553   */\n    tag_93:\n        /* \"#utility.yul\":3437:3559   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3565:3687   */\n    tag_46:\n        /* \"#utility.yul\":3638:3662   */\n      tag_95\n        /* \"#utility.yul\":3656:3661   */\n      dup2\n        /* \"#utility.yul\":3638:3662   */\n      tag_69\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":3631:3636   */\n      dup2\n        /* \"#utility.yul\":3628:3663   */\n      eq\n        /* \"#utility.yul\":3618:3681   */\n      tag_96\n      jumpi\n        /* \"#utility.yul\":3677:3678   */\n      0x00\n        /* \"#utility.yul\":3674:3675   */\n      dup1\n        /* \"#utility.yul\":3667:3679   */\n      revert\n        /* \"#utility.yul\":3618:3681   */\n    tag_96:\n        /* \"#utility.yul\":3565:3687   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d1cd5eab188ded19263a8a1006519b7f916479572b46314f33acf9c6e751fc9164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260b4600055730aa7726bc0cb085a3c4fbe3b09b91dd7e27f7fea600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006a57600080fd5b506103f48061007a6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063180dc0ac1461005c578063743b34521461007a57806382760cd214610096578063a035b1fe146100b2578063d3aceae2146100d0575b600080fd5b610064610100565b6040516100719190610294565b60405180910390f35b610094600480360381019061008f91906101f6565b610126565b005b6100b060048036038101906100ab9190610236565b610148565b005b6100ba610181565b6040516100c791906102af565b60405180910390f35b6100ea60048036038101906100e591906101c9565b610187565b6040516100f791906102af565b60405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015442101561013557600080fd5b60025442111561014457600080fd5b5050565b4282101561015557600080fd5b8181101561016257600080fd5b62278d004261017191906102ca565b81111561017d57600080fd5b5050565b60005481565b60046020528060005260406000206000915090505481565b6000813590506101ae81610390565b92915050565b6000813590506101c3816103a7565b92915050565b6000602082840312156101df576101de61038b565b5b60006101ed8482850161019f565b91505092915050565b6000806040838503121561020d5761020c61038b565b5b600061021b8582860161019f565b925050602061022c858286016101b4565b9150509250929050565b6000806040838503121561024d5761024c61038b565b5b600061025b858286016101b4565b925050602061026c858286016101b4565b9150509250929050565b61027f81610320565b82525050565b61028e81610352565b82525050565b60006020820190506102a96000830184610276565b92915050565b60006020820190506102c46000830184610285565b92915050565b60006102d582610352565b91506102e083610352565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156103155761031461035c565b5b828201905092915050565b600061032b82610332565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b61039981610320565b81146103a457600080fd5b50565b6103b081610352565b81146103bb57600080fd5b5056fea2646970667358221220d1cd5eab188ded19263a8a1006519b7f916479572b46314f33acf9c6e751fc9164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xB4 PUSH1 0x0 SSTORE PUSH20 0xAA7726BC0CB085A3C4FBE3B09B91DD7E27F7FEA PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F4 DUP1 PUSH2 0x7A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x180DC0AC EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x743B3452 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x82760CD2 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xD3ACEAE2 EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x100 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x294 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST PUSH2 0x126 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x236 JUMP JUMPDEST PUSH2 0x148 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBA PUSH2 0x181 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x1C9 JUMP JUMPDEST PUSH2 0x187 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP LT ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP GT ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST TIMESTAMP DUP3 LT ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x162 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x278D00 TIMESTAMP PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x2CA JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AE DUP2 PUSH2 0x390 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C3 DUP2 PUSH2 0x3A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DF JUMPI PUSH2 0x1DE PUSH2 0x38B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ED DUP5 DUP3 DUP6 ADD PUSH2 0x19F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20D JUMPI PUSH2 0x20C PUSH2 0x38B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21B DUP6 DUP3 DUP7 ADD PUSH2 0x19F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22C DUP6 DUP3 DUP7 ADD PUSH2 0x1B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24D JUMPI PUSH2 0x24C PUSH2 0x38B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25B DUP6 DUP3 DUP7 ADD PUSH2 0x1B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x26C DUP6 DUP3 DUP7 ADD PUSH2 0x1B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x27F DUP2 PUSH2 0x320 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x28E DUP2 PUSH2 0x352 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x276 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x285 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D5 DUP3 PUSH2 0x352 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E0 DUP4 PUSH2 0x352 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x314 PUSH2 0x35C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32B DUP3 PUSH2 0x332 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x399 DUP2 PUSH2 0x320 JUMP JUMPDEST DUP2 EQ PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3B0 DUP2 PUSH2 0x352 JUMP JUMPDEST DUP2 EQ PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0xCD 0x5E 0xAB XOR DUP14 0xED NOT 0x26 GASPRICE DUP11 LT MOD MLOAD SWAP12 PUSH32 0x916479572B46314F33ACF9C6E751FC9164736F6C634300080700330000000000 ",
							"sourceMap": "125:663:1:-:0;;;177:11;154:34;;279:42;253:68;;;;;;;;;;;;;;;;;;;;125:663;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_balance_98": {
									"entryPoint": 391,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@axsToken_94": {
									"entryPoint": 256,
									"id": 94,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@launch_128": {
									"entryPoint": 328,
									"id": 128,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@pledge_150": {
									"entryPoint": 294,
									"id": 150,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@price_87": {
									"entryPoint": 385,
									"id": 87,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 800,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 860,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 907,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3690:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:2",
														"type": ""
													}
												],
												"src": "152:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "411:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:2"
															},
															"nodeType": "YulIf",
															"src": "373:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "502:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "517:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "521:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:2",
														"type": ""
													}
												],
												"src": "297:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "715:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "761:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "763:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "763:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "763:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "736:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "745:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "732:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "757:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "728:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:32:2"
															},
															"nodeType": "YulIf",
															"src": "725:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "854:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "869:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "883:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "873:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "898:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "933:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "944:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "929:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "929:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "953:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "908:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "908:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "898:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "981:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "996:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1010:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1000:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1026:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1061:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1072:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1057:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1057:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1081:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1036:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1026:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "677:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "688:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "700:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "708:6:2",
														"type": ""
													}
												],
												"src": "632:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1195:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1241:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1243:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1243:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1243:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1216:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1225:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1212:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1212:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1237:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1208:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1208:32:2"
															},
															"nodeType": "YulIf",
															"src": "1205:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1334:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1349:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1363:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1353:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1378:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1413:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1424:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1409:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1409:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1433:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1388:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1388:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1378:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1461:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1476:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1490:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1480:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1506:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1541:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1552:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1537:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1537:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1561:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1516:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1516:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1506:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1157:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1168:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1180:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1188:6:2",
														"type": ""
													}
												],
												"src": "1112:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1657:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1674:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1697:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1679:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1667:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1645:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1652:3:2",
														"type": ""
													}
												],
												"src": "1592:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1781:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1798:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1821:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1803:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1803:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1791:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1791:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1791:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1769:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1776:3:2",
														"type": ""
													}
												],
												"src": "1716:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1938:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1948:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1960:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1971:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1956:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1956:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1948:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2028:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2041:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2052:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2037:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2037:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1984:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1984:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1984:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1910:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1922:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1933:4:2",
														"type": ""
													}
												],
												"src": "1840:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2166:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2176:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2188:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2199:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2184:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2184:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2176:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2256:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2269:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2280:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2265:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2265:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2212:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2212:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2212:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2138:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2150:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2161:4:2",
														"type": ""
													}
												],
												"src": "2068:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2336:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2346:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2362:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2356:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2346:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2329:6:2",
														"type": ""
													}
												],
												"src": "2296:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2421:261:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2431:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2454:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2436:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2436:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2431:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2465:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2488:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2470:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2470:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2465:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2628:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2630:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2630:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2630:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2549:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2556:66:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2624:1:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2552:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2552:74:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2546:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2546:81:2"
															},
															"nodeType": "YulIf",
															"src": "2543:107:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2660:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2671:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2674:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2667:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2667:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2660:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2408:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2411:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2417:3:2",
														"type": ""
													}
												],
												"src": "2377:305:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2733:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2743:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2772:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2754:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2754:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2743:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2715:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2725:7:2",
														"type": ""
													}
												],
												"src": "2688:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2835:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2845:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2860:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2867:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2856:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2856:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2845:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2817:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2827:7:2",
														"type": ""
													}
												],
												"src": "2790:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2967:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2977:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2988:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2977:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2949:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2959:7:2",
														"type": ""
													}
												],
												"src": "2922:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3033:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3050:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3053:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3043:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3043:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3043:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3147:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3150:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3140:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3140:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3171:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3174:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3164:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3164:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3164:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3005:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3280:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3297:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3300:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3290:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3290:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3290:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3191:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3403:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3420:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3423:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3413:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3413:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3413:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3314:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3480:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3537:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3546:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3549:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3539:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3539:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3539:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3503:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3528:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3510:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3510:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3500:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3500:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3493:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3493:43:2"
															},
															"nodeType": "YulIf",
															"src": "3490:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3473:5:2",
														"type": ""
													}
												],
												"src": "3437:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3608:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3665:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3674:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3677:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3667:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3667:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3667:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3631:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3656:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3638:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3638:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3628:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3628:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3621:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3621:43:2"
															},
															"nodeType": "YulIf",
															"src": "3618:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3601:5:2",
														"type": ""
													}
												],
												"src": "3565:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c8063180dc0ac1461005c578063743b34521461007a57806382760cd214610096578063a035b1fe146100b2578063d3aceae2146100d0575b600080fd5b610064610100565b6040516100719190610294565b60405180910390f35b610094600480360381019061008f91906101f6565b610126565b005b6100b060048036038101906100ab9190610236565b610148565b005b6100ba610181565b6040516100c791906102af565b60405180910390f35b6100ea60048036038101906100e591906101c9565b610187565b6040516100f791906102af565b60405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015442101561013557600080fd5b60025442111561014457600080fd5b5050565b4282101561015557600080fd5b8181101561016257600080fd5b62278d004261017191906102ca565b81111561017d57600080fd5b5050565b60005481565b60046020528060005260406000206000915090505481565b6000813590506101ae81610390565b92915050565b6000813590506101c3816103a7565b92915050565b6000602082840312156101df576101de61038b565b5b60006101ed8482850161019f565b91505092915050565b6000806040838503121561020d5761020c61038b565b5b600061021b8582860161019f565b925050602061022c858286016101b4565b9150509250929050565b6000806040838503121561024d5761024c61038b565b5b600061025b858286016101b4565b925050602061026c858286016101b4565b9150509250929050565b61027f81610320565b82525050565b61028e81610352565b82525050565b60006020820190506102a96000830184610276565b92915050565b60006020820190506102c46000830184610285565b92915050565b60006102d582610352565b91506102e083610352565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156103155761031461035c565b5b828201905092915050565b600061032b82610332565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b61039981610320565b81146103a457600080fd5b50565b6103b081610352565b81146103bb57600080fd5b5056fea2646970667358221220d1cd5eab188ded19263a8a1006519b7f916479572b46314f33acf9c6e751fc9164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x180DC0AC EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x743B3452 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x82760CD2 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xD3ACEAE2 EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x100 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x294 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST PUSH2 0x126 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x236 JUMP JUMPDEST PUSH2 0x148 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBA PUSH2 0x181 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x1C9 JUMP JUMPDEST PUSH2 0x187 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP LT ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP GT ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST TIMESTAMP DUP3 LT ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x162 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x278D00 TIMESTAMP PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x2CA JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AE DUP2 PUSH2 0x390 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C3 DUP2 PUSH2 0x3A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DF JUMPI PUSH2 0x1DE PUSH2 0x38B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ED DUP5 DUP3 DUP6 ADD PUSH2 0x19F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20D JUMPI PUSH2 0x20C PUSH2 0x38B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21B DUP6 DUP3 DUP7 ADD PUSH2 0x19F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22C DUP6 DUP3 DUP7 ADD PUSH2 0x1B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24D JUMPI PUSH2 0x24C PUSH2 0x38B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25B DUP6 DUP3 DUP7 ADD PUSH2 0x1B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x26C DUP6 DUP3 DUP7 ADD PUSH2 0x1B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x27F DUP2 PUSH2 0x320 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x28E DUP2 PUSH2 0x352 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x276 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x285 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D5 DUP3 PUSH2 0x352 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E0 DUP4 PUSH2 0x352 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x314 PUSH2 0x35C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32B DUP3 PUSH2 0x332 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x399 DUP2 PUSH2 0x320 JUMP JUMPDEST DUP2 EQ PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3B0 DUP2 PUSH2 0x352 JUMP JUMPDEST DUP2 EQ PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0xCD 0x5E 0xAB XOR DUP14 0xED NOT 0x26 GASPRICE DUP11 LT MOD MLOAD SWAP12 PUSH32 0x916479572B46314F33ACF9C6E751FC9164736F6C634300080700330000000000 ",
							"sourceMap": "125:663:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;253:68;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;610:169;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;377:227;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;154:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;328:40;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;253:68;;;;;;;;;;;;;:::o;610:169::-;705:9;;686:15;:28;;678:37;;;;;;753:7;;734:15;:26;;726:35;;;;;;610:169;;:::o;377:227::-;471:15;457:10;:29;;449:38;;;;;;518:10;506:8;:22;;498:31;;;;;;578:7;560:15;:25;;;;:::i;:::-;548:8;:37;;540:46;;;;;;377:227;;:::o;154:34::-;;;;:::o;328:40::-;;;;;;;;;;;;;;;;;:::o;7:139:2:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:119;;;411:79;;:::i;:::-;373:119;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;297:329;;;;:::o;632:474::-;700:6;708;757:2;745:9;736:7;732:23;728:32;725:119;;;763:79;;:::i;:::-;725:119;883:1;908:53;953:7;944:6;933:9;929:22;908:53;:::i;:::-;898:63;;854:117;1010:2;1036:53;1081:7;1072:6;1061:9;1057:22;1036:53;:::i;:::-;1026:63;;981:118;632:474;;;;;:::o;1112:::-;1180:6;1188;1237:2;1225:9;1216:7;1212:23;1208:32;1205:119;;;1243:79;;:::i;:::-;1205:119;1363:1;1388:53;1433:7;1424:6;1413:9;1409:22;1388:53;:::i;:::-;1378:63;;1334:117;1490:2;1516:53;1561:7;1552:6;1541:9;1537:22;1516:53;:::i;:::-;1506:63;;1461:118;1112:474;;;;;:::o;1592:118::-;1679:24;1697:5;1679:24;:::i;:::-;1674:3;1667:37;1592:118;;:::o;1716:::-;1803:24;1821:5;1803:24;:::i;:::-;1798:3;1791:37;1716:118;;:::o;1840:222::-;1933:4;1971:2;1960:9;1956:18;1948:26;;1984:71;2052:1;2041:9;2037:17;2028:6;1984:71;:::i;:::-;1840:222;;;;:::o;2068:::-;2161:4;2199:2;2188:9;2184:18;2176:26;;2212:71;2280:1;2269:9;2265:17;2256:6;2212:71;:::i;:::-;2068:222;;;;:::o;2377:305::-;2417:3;2436:20;2454:1;2436:20;:::i;:::-;2431:25;;2470:20;2488:1;2470:20;:::i;:::-;2465:25;;2624:1;2556:66;2552:74;2549:1;2546:81;2543:107;;;2630:18;;:::i;:::-;2543:107;2674:1;2671;2667:9;2660:16;;2377:305;;;;:::o;2688:96::-;2725:7;2754:24;2772:5;2754:24;:::i;:::-;2743:35;;2688:96;;;:::o;2790:126::-;2827:7;2867:42;2860:5;2856:54;2845:65;;2790:126;;;:::o;2922:77::-;2959:7;2988:5;2977:16;;2922:77;;;:::o;3005:180::-;3053:77;3050:1;3043:88;3150:4;3147:1;3140:15;3174:4;3171:1;3164:15;3314:117;3423:1;3420;3413:12;3437:122;3510:24;3528:5;3510:24;:::i;:::-;3503:5;3500:35;3490:63;;3549:1;3546;3539:12;3490:63;3437:122;:::o;3565:::-;3638:24;3656:5;3638:24;:::i;:::-;3631:5;3628:35;3618:63;;3677:1;3674;3667:12;3618:63;3565:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "202400",
								"executionCost": "46618",
								"totalCost": "249018"
							},
							"external": {
								"_balance(address)": "2880",
								"axsToken()": "2492",
								"launch(uint256,uint256)": "infinite",
								"pledge(address,uint256)": "4878",
								"price()": "2473"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 125,
									"end": 788,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 125,
									"end": 788,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 125,
									"end": 788,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 177,
									"end": 188,
									"name": "PUSH",
									"source": 1,
									"value": "B4"
								},
								{
									"begin": 154,
									"end": 188,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 154,
									"end": 188,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 279,
									"end": 321,
									"name": "PUSH",
									"source": 1,
									"value": "AA7726BC0CB085A3C4FBE3B09B91DD7E27F7FEA"
								},
								{
									"begin": 253,
									"end": 321,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 253,
									"end": 321,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 321,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 253,
									"end": 321,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 253,
									"end": 321,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 253,
									"end": 321,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 253,
									"end": 321,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 253,
									"end": 321,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 253,
									"end": 321,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 253,
									"end": 321,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 253,
									"end": 321,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 253,
									"end": 321,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 253,
									"end": 321,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 253,
									"end": 321,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 253,
									"end": 321,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 253,
									"end": 321,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 253,
									"end": 321,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 253,
									"end": 321,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 253,
									"end": 321,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 253,
									"end": 321,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 125,
									"end": 788,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 125,
									"end": 788,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 125,
									"end": 788,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 125,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 125,
									"end": 788,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 125,
									"end": 788,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 788,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 125,
									"end": 788,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 125,
									"end": 788,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 125,
									"end": 788,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 125,
									"end": 788,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 125,
									"end": 788,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 125,
									"end": 788,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 125,
									"end": 788,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 125,
									"end": 788,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 788,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 125,
									"end": 788,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 788,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d1cd5eab188ded19263a8a1006519b7f916479572b46314f33acf9c6e751fc9164736f6c63430008070033",
									".code": [
										{
											"begin": 125,
											"end": 788,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 125,
											"end": 788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 125,
											"end": 788,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 125,
											"end": 788,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 125,
											"end": 788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 125,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 125,
											"end": 788,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 788,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 125,
											"end": 788,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "PUSH",
											"source": 1,
											"value": "180DC0AC"
										},
										{
											"begin": 125,
											"end": 788,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 125,
											"end": 788,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "PUSH",
											"source": 1,
											"value": "743B3452"
										},
										{
											"begin": 125,
											"end": 788,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 125,
											"end": 788,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "PUSH",
											"source": 1,
											"value": "82760CD2"
										},
										{
											"begin": 125,
											"end": 788,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 125,
											"end": 788,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "PUSH",
											"source": 1,
											"value": "A035B1FE"
										},
										{
											"begin": 125,
											"end": 788,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 125,
											"end": 788,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "PUSH",
											"source": 1,
											"value": "D3ACEAE2"
										},
										{
											"begin": 125,
											"end": 788,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 125,
											"end": 788,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 125,
											"end": 788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 788,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 253,
											"end": 321,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 253,
											"end": 321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 253,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 253,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 253,
											"end": 321,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 321,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 253,
											"end": 321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 253,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 253,
											"end": 321,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 253,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 253,
											"end": 321,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 253,
											"end": 321,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 253,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 253,
											"end": 321,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 321,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 253,
											"end": 321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 253,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 253,
											"end": 321,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 253,
											"end": 321,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 253,
											"end": 321,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 253,
											"end": 321,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 253,
											"end": 321,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 253,
											"end": 321,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 610,
											"end": 779,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 610,
											"end": 779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 610,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 610,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 610,
											"end": 779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 610,
											"end": 779,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 610,
											"end": 779,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 610,
											"end": 779,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 610,
											"end": 779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 610,
											"end": 779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 610,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 610,
											"end": 779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 610,
											"end": 779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 610,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 610,
											"end": 779,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 610,
											"end": 779,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 610,
											"end": 779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 610,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 610,
											"end": 779,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 610,
											"end": 779,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 610,
											"end": 779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 610,
											"end": 779,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 377,
											"end": 604,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 377,
											"end": 604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 377,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 377,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 377,
											"end": 604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 377,
											"end": 604,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 377,
											"end": 604,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 377,
											"end": 604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 377,
											"end": 604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 377,
											"end": 604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 377,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 377,
											"end": 604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 377,
											"end": 604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 377,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 377,
											"end": 604,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 377,
											"end": 604,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 377,
											"end": 604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 377,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 377,
											"end": 604,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 377,
											"end": 604,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 377,
											"end": 604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 377,
											"end": 604,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 154,
											"end": 188,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 154,
											"end": 188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 154,
											"end": 188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 154,
											"end": 188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 154,
											"end": 188,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 154,
											"end": 188,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 154,
											"end": 188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 154,
											"end": 188,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 154,
											"end": 188,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 154,
											"end": 188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 154,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 154,
											"end": 188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 154,
											"end": 188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 154,
											"end": 188,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 154,
											"end": 188,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 154,
											"end": 188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 154,
											"end": 188,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 154,
											"end": 188,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 154,
											"end": 188,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 154,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 154,
											"end": 188,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 154,
											"end": 188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 154,
											"end": 188,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 328,
											"end": 368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 328,
											"end": 368,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 328,
											"end": 368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 328,
											"end": 368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 328,
											"end": 368,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 368,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 328,
											"end": 368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 328,
											"end": 368,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 368,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 328,
											"end": 368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 328,
											"end": 368,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 328,
											"end": 368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 328,
											"end": 368,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 368,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 328,
											"end": 368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 328,
											"end": 368,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 253,
											"end": 321,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 253,
											"end": 321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 253,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 253,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 253,
											"end": 321,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 253,
											"end": 321,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 253,
											"end": 321,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 253,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 253,
											"end": 321,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 253,
											"end": 321,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 253,
											"end": 321,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 253,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 253,
											"end": 321,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 253,
											"end": 321,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 253,
											"end": 321,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 610,
											"end": 779,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 610,
											"end": 779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 705,
											"end": 714,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 705,
											"end": 714,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 686,
											"end": 701,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 686,
											"end": 714,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 686,
											"end": 714,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 678,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 678,
											"end": 715,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 678,
											"end": 715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 715,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 678,
											"end": 715,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 678,
											"end": 715,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 678,
											"end": 715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 753,
											"end": 760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 753,
											"end": 760,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 734,
											"end": 749,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 734,
											"end": 760,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 734,
											"end": 760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 726,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 726,
											"end": 761,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 726,
											"end": 761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 761,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 726,
											"end": 761,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 726,
											"end": 761,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 726,
											"end": 761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 610,
											"end": 779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 610,
											"end": 779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 610,
											"end": 779,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 377,
											"end": 604,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 377,
											"end": 604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 471,
											"end": 486,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 457,
											"end": 467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 457,
											"end": 486,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 457,
											"end": 486,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 449,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 449,
											"end": 487,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 449,
											"end": 487,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 487,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 449,
											"end": 487,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 449,
											"end": 487,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 449,
											"end": 487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 518,
											"end": 528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 506,
											"end": 514,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 506,
											"end": 528,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 506,
											"end": 528,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 498,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 498,
											"end": 529,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 498,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 498,
											"end": 529,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 498,
											"end": 529,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 498,
											"end": 529,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 498,
											"end": 529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 578,
											"end": 585,
											"name": "PUSH",
											"source": 1,
											"value": "278D00"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 560,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 560,
											"end": 585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 560,
											"end": 585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 560,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 560,
											"end": 585,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 560,
											"end": 585,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 560,
											"end": 585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 548,
											"end": 556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 548,
											"end": 585,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 548,
											"end": 585,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 540,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 540,
											"end": 586,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 540,
											"end": 586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 586,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 540,
											"end": 586,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 540,
											"end": 586,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 540,
											"end": 586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 377,
											"end": 604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 377,
											"end": 604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 377,
											"end": 604,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 154,
											"end": 188,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 154,
											"end": 188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 154,
											"end": 188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 154,
											"end": 188,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 154,
											"end": 188,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 154,
											"end": 188,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 328,
											"end": 368,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 328,
											"end": 368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 328,
											"end": 368,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 328,
											"end": 368,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 328,
											"end": 368,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 328,
											"end": 368,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 328,
											"end": 368,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 328,
											"end": 368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 368,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 373,
											"end": 492,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 373,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 373,
											"end": 492,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 531,
											"end": 532,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 502,
											"end": 619,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 757,
											"end": 759,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 754,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 736,
											"end": 743,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 732,
											"end": 755,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 728,
											"end": 760,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 725,
											"end": 844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 725,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 725,
											"end": 844,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 883,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 953,
											"end": 960,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 933,
											"end": 942,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 898,
											"end": 961,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 898,
											"end": 961,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 854,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1012,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1081,
											"end": 1088,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1079,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1112,
											"end": 1586,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1112,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1180,
											"end": 1186,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1239,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1225,
											"end": 1234,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1216,
											"end": 1223,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1235,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1208,
											"end": 1240,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1324,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1205,
											"end": 1324,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1243,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1243,
											"end": 1322,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1243,
											"end": 1322,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1243,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1324,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1205,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1364,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1433,
											"end": 1440,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1424,
											"end": 1430,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1422,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1431,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1388,
											"end": 1441,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1388,
											"end": 1441,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1388,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1441,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1441,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1451,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1492,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1516,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1561,
											"end": 1568,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1558,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1541,
											"end": 1550,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1537,
											"end": 1559,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1516,
											"end": 1569,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1516,
											"end": 1569,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1516,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1569,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1569,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1586,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1586,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1586,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1586,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1586,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1592,
											"end": 1710,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1592,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1697,
											"end": 1702,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1679,
											"end": 1703,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1679,
											"end": 1703,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1679,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1674,
											"end": 1677,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1704,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1592,
											"end": 1710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1592,
											"end": 1710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1592,
											"end": 1710,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1716,
											"end": 1834,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1716,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1821,
											"end": 1826,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1803,
											"end": 1827,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1803,
											"end": 1827,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1803,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1801,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1791,
											"end": 1828,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1834,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1840,
											"end": 2062,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1840,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1933,
											"end": 1937,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 1973,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 1969,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1956,
											"end": 1974,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1948,
											"end": 1974,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1948,
											"end": 1974,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1984,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2052,
											"end": 2053,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2037,
											"end": 2054,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2034,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1984,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1984,
											"end": 2055,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1984,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1984,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 2062,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 2062,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 2062,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 2062,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 2062,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2068,
											"end": 2290,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2068,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2201,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2188,
											"end": 2197,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2202,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2202,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2202,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2280,
											"end": 2281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2269,
											"end": 2278,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2265,
											"end": 2282,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2212,
											"end": 2283,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2212,
											"end": 2283,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2212,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2068,
											"end": 2290,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2068,
											"end": 2290,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2068,
											"end": 2290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2068,
											"end": 2290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2068,
											"end": 2290,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2377,
											"end": 2682,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2377,
											"end": 2682,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2420,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2436,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2454,
											"end": 2455,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2436,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2436,
											"end": 2456,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2436,
											"end": 2456,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2436,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2470,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2488,
											"end": 2489,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2470,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2470,
											"end": 2490,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2470,
											"end": 2490,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2470,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2465,
											"end": 2490,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2465,
											"end": 2490,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2624,
											"end": 2625,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2556,
											"end": 2622,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2552,
											"end": 2626,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2549,
											"end": 2550,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2546,
											"end": 2627,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2650,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2543,
											"end": 2650,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2630,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2630,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2630,
											"end": 2648,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2630,
											"end": 2648,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2630,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2650,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2543,
											"end": 2650,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2675,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2672,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2667,
											"end": 2676,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2682,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2682,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2682,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2682,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2682,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2688,
											"end": 2784,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2688,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2732,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2772,
											"end": 2777,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2754,
											"end": 2778,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2754,
											"end": 2778,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2754,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2778,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2778,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2784,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2784,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2784,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2784,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2790,
											"end": 2916,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2790,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2867,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2860,
											"end": 2865,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2856,
											"end": 2910,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2910,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 2916,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 2916,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 2916,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 2916,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2922,
											"end": 2999,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2922,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 2966,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2988,
											"end": 2993,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2993,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2993,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2999,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2999,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2999,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2999,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3005,
											"end": 3185,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3005,
											"end": 3185,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3050,
											"end": 3051,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3043,
											"end": 3131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3150,
											"end": 3154,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3147,
											"end": 3148,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3140,
											"end": 3155,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3178,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3171,
											"end": 3172,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3164,
											"end": 3179,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3314,
											"end": 3431,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3314,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3423,
											"end": 3424,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3420,
											"end": 3421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3425,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3437,
											"end": 3559,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3437,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3528,
											"end": 3533,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3510,
											"end": 3534,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3510,
											"end": 3534,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3510,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3503,
											"end": 3508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3500,
											"end": 3535,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3490,
											"end": 3553,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3546,
											"end": 3547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3539,
											"end": 3551,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3553,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3490,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3437,
											"end": 3559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3437,
											"end": 3559,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3565,
											"end": 3687,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3565,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3656,
											"end": 3661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3638,
											"end": 3662,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3638,
											"end": 3662,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3638,
											"end": 3662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3636,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3663,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3618,
											"end": 3681,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3618,
											"end": 3681,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3678,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3674,
											"end": 3675,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3667,
											"end": 3679,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3618,
											"end": 3681,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3618,
											"end": 3681,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3565,
											"end": 3687,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3565,
											"end": 3687,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_balance(address)": "d3aceae2",
							"axsToken()": "180dc0ac",
							"launch(uint256,uint256)": "82760cd2",
							"pledge(address,uint256)": "743b3452",
							"price()": "a035b1fe"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"axsToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_starttime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endtime\",\"type\":\"uint256\"}],\"name\":\"launch\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"useAdd\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"pledge\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TokenSell.sol\":\"Tokensell\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"TokenSell.sol\":{\"keccak256\":\"0x1817e11f29b928f6bc182deed72413023331755179fdeece983a0f7220ed5cd4\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://9c5395257a7d38baa952d43485f0039a0812a1f4d4a52256ae630a0c9eca0f03\",\"dweb:/ipfs/QmSZCBakAES3gSMa8mBKUU1cZq8JbUzCoNVS5bzvMG4oFs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 87,
								"contract": "TokenSell.sol:Tokensell",
								"label": "price",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 89,
								"contract": "TokenSell.sol:Tokensell",
								"label": "starttime",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 91,
								"contract": "TokenSell.sol:Tokensell",
								"label": "endtime",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 94,
								"contract": "TokenSell.sol:Tokensell",
								"label": "axsToken",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 98,
								"contract": "TokenSell.sol:Tokensell",
								"label": "_balance",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> TokenSell.sol:22:21:\n   |\n22 |     function pledge(address useAdd,uint amount) external view{\n   |                     ^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 640,
					"file": "TokenSell.sol",
					"start": 626
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> TokenSell.sol:22:36:\n   |\n22 |     function pledge(address useAdd,uint amount) external view{\n   |                                    ^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 652,
					"file": "TokenSell.sol",
					"start": 641
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"TokenSell.sol": {
				"ast": {
					"absolutePath": "TokenSell.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"Tokensell": [
							151
						]
					},
					"id": 152,
					"license": "Unlicense",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 152,
							"sourceUnit": 78,
							"src": "65:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 151,
							"linearizedBaseContracts": [
								151
							],
							"name": "Tokensell",
							"nameLocation": "134:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "a035b1fe",
									"id": 87,
									"mutability": "mutable",
									"name": "price",
									"nameLocation": "169:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 151,
									"src": "154:34:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 81,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "154:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_180_by_1",
											"typeString": "int_const 180"
										},
										"id": 86,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"id": 84,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "31",
												"id": 82,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "177:1:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											"nodeType": "BinaryOperation",
											"operator": "*",
											"rightExpression": {
												"hexValue": "3130",
												"id": 83,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "181:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"src": "177:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "3138",
											"id": 85,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "186:2:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18_by_1",
												"typeString": "int_const 18"
											},
											"value": "18"
										},
										"src": "177:11:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_180_by_1",
											"typeString": "int_const 180"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 89,
									"mutability": "mutable",
									"name": "starttime",
									"nameLocation": "204:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 151,
									"src": "199:14:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 88,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "199:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 91,
									"mutability": "mutable",
									"name": "endtime",
									"nameLocation": "229:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 151,
									"src": "224:12:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 90,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "224:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "180dc0ac",
									"id": 94,
									"mutability": "mutable",
									"name": "axsToken",
									"nameLocation": "268:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 151,
									"src": "253:68:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 92,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "253:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830616137373236626330634230383541334334666245334230396239314444374532376637666561",
										"id": 93,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "279:42:1",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x0aa7726bc0cB085A3C4fbE3B09b91DD7E27f7fea"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d3aceae2",
									"id": 98,
									"mutability": "mutable",
									"name": "_balance",
									"nameLocation": "360:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 151,
									"src": "328:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 97,
										"keyType": {
											"id": 95,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "336:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "328:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 96,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "347:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "438:166:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 106,
																"name": "_starttime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "457:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 107,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "471:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "471:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "457:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 105,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "449:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "449:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "449:38:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 113,
																"name": "_endtime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 102,
																"src": "506:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 114,
																"name": "_starttime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "518:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "506:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 112,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "498:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "498:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "498:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 119,
																"name": "_endtime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 102,
																"src": "548:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 120,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "560:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "560:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3330",
																	"id": 122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "578:7:1",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2592000_by_1",
																		"typeString": "int_const 2592000"
																	},
																	"value": "30"
																},
																"src": "560:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "548:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 118,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "540:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "540:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "540:46:1"
											}
										]
									},
									"functionSelector": "82760cd2",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "launch",
									"nameLocation": "386:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "_starttime",
												"nameLocation": "398:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "393:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "393:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "_endtime",
												"nameLocation": "416:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "411:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "411:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:33:1"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "438:0:1"
									},
									"scope": 151,
									"src": "377:227:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "667:112:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 136,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "686:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "686:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 138,
																"name": "starttime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 89,
																"src": "705:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "686:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "678:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "678:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "678:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 143,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "734:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "734:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 145,
																"name": "endtime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "753:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "734:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 142,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "726:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "726:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "726:35:1"
											}
										]
									},
									"functionSelector": "743b3452",
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pledge",
									"nameLocation": "619:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "useAdd",
												"nameLocation": "634:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "626:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "646:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "641:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "641:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "625:28:1"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "667:0:1"
									},
									"scope": 151,
									"src": "610:169:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 152,
							"src": "125:663:1",
							"usedErrors": []
						}
					],
					"src": "38:750:1"
				},
				"id": 1
			}
		}
	}
}