{
	"id": "6ad25488df31f0df93bc41892845aac8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"TokenSell.sol": {
				"content": "//SPDX-License-Identifier: Unlicense\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract Tokensell{\r\n    uint public startTime;\r\n    uint public endTime;\r\n    uint public now = block.timestamp * 1 minutes;\r\n    \r\n    address public axsToken = 0x0aa7726bc0cB085A3C4fbE3B09b91DD7E27f7fea;\r\n\r\n    constructor(uint timeRuns) public{\r\n        startTime = block.timestamp + timeRuns * 1 minutes; \r\n        endTime = block.timestamp + timeRuns * 1 minutes;  \r\n    }\r\n\r\n\r\n    function receiveUSDT() public payable{\r\n        require(startTime < endTime);\r\n        require(block.timestamp < endTime);\r\n        require(msg.value > 0);\r\n        IERC20(axsToken).transfer(msg.sender, msg.value * 100);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TokenSell.sol": {
				"Tokensell": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "timeRuns",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "axsToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "now",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "receiveUSDT",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TokenSell.sol\":125:743  contract Tokensell{\r... */\n  mstore(0x40, 0x80)\n    /* \"TokenSell.sol\":240:249  1 minutes */\n  0x3c\n    /* \"TokenSell.sol\":222:237  block.timestamp */\n  timestamp\n    /* \"TokenSell.sol\":222:249  block.timestamp * 1 minutes */\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"TokenSell.sol\":204:249  uint public now = block.timestamp * 1 minutes */\n  0x02\n  sstore\n    /* \"TokenSell.sol\":288:330  0x0aa7726bc0cB085A3C4fbE3B09b91DD7E27f7fea */\n  0x0aa7726bc0cb085a3c4fbe3b09b91dd7e27f7fea\n    /* \"TokenSell.sol\":262:330  address public axsToken = 0x0aa7726bc0cB085A3C4fbE3B09b91DD7E27f7fea */\n  0x03\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"TokenSell.sol\":339:503  constructor(uint timeRuns) public{\r... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_4\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n    /* \"TokenSell.sol\":424:433  1 minutes */\n  0x3c\n    /* \"TokenSell.sol\":413:421  timeRuns */\n  dup2\n    /* \"TokenSell.sol\":413:433  timeRuns * 1 minutes */\n  tag_8\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_8:\n    /* \"TokenSell.sol\":395:410  block.timestamp */\n  timestamp\n    /* \"TokenSell.sol\":395:433  block.timestamp + timeRuns * 1 minutes */\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n    /* \"TokenSell.sol\":383:392  startTime */\n  0x00\n    /* \"TokenSell.sol\":383:433  startTime = block.timestamp + timeRuns * 1 minutes */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"TokenSell.sol\":484:493  1 minutes */\n  0x3c\n    /* \"TokenSell.sol\":473:481  timeRuns */\n  dup2\n    /* \"TokenSell.sol\":473:493  timeRuns * 1 minutes */\n  tag_11\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_11:\n    /* \"TokenSell.sol\":455:470  block.timestamp */\n  timestamp\n    /* \"TokenSell.sol\":455:493  block.timestamp + timeRuns * 1 minutes */\n  tag_12\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_12:\n    /* \"TokenSell.sol\":445:452  endTime */\n  0x01\n    /* \"TokenSell.sol\":445:493  endTime = block.timestamp + timeRuns * 1 minutes */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"TokenSell.sol\":339:503  constructor(uint timeRuns) public{\r... */\n  pop\n    /* \"TokenSell.sol\":125:743  contract Tokensell{\r... */\n  jump(tag_13)\n    /* \"#utility.yul\":7:150   */\ntag_15:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_17\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_5:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_21\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":243:362   */\ntag_20:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_23\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_15\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:899   */\ntag_10:\n    /* \"#utility.yul\":634:637   */\n  0x00\n    /* \"#utility.yul\":653:673   */\n  tag_27\n    /* \"#utility.yul\":671:672   */\n  dup3\n    /* \"#utility.yul\":653:673   */\n  tag_28\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":648:673   */\n  swap2\n  pop\n    /* \"#utility.yul\":687:707   */\n  tag_29\n    /* \"#utility.yul\":705:706   */\n  dup4\n    /* \"#utility.yul\":687:707   */\n  tag_28\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":682:707   */\n  swap3\n  pop\n    /* \"#utility.yul\":841:842   */\n  dup3\n    /* \"#utility.yul\":773:839   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":769:843   */\n  sub\n    /* \"#utility.yul\":766:767   */\n  dup3\n    /* \"#utility.yul\":763:844   */\n  gt\n    /* \"#utility.yul\":760:867   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":847:865   */\n  tag_31\n  tag_32\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":760:867   */\ntag_30:\n    /* \"#utility.yul\":891:892   */\n  dup3\n    /* \"#utility.yul\":888:889   */\n  dup3\n    /* \"#utility.yul\":884:893   */\n  add\n    /* \"#utility.yul\":877:893   */\n  swap1\n  pop\n    /* \"#utility.yul\":594:899   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":905:1253   */\ntag_2:\n    /* \"#utility.yul\":945:952   */\n  0x00\n    /* \"#utility.yul\":968:988   */\n  tag_34\n    /* \"#utility.yul\":986:987   */\n  dup3\n    /* \"#utility.yul\":968:988   */\n  tag_28\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":963:988   */\n  swap2\n  pop\n    /* \"#utility.yul\":1002:1022   */\n  tag_35\n    /* \"#utility.yul\":1020:1021   */\n  dup4\n    /* \"#utility.yul\":1002:1022   */\n  tag_28\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":997:1022   */\n  swap3\n  pop\n    /* \"#utility.yul\":1190:1191   */\n  dup2\n    /* \"#utility.yul\":1122:1188   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1118:1192   */\n  div\n    /* \"#utility.yul\":1115:1116   */\n  dup4\n    /* \"#utility.yul\":1112:1193   */\n  gt\n    /* \"#utility.yul\":1107:1108   */\n  dup3\n    /* \"#utility.yul\":1100:1109   */\n  iszero\n    /* \"#utility.yul\":1093:1110   */\n  iszero\n    /* \"#utility.yul\":1089:1194   */\n  and\n    /* \"#utility.yul\":1086:1217   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1197:1215   */\n  tag_37\n  tag_32\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1086:1217   */\ntag_36:\n    /* \"#utility.yul\":1245:1246   */\n  dup3\n    /* \"#utility.yul\":1242:1243   */\n  dup3\n    /* \"#utility.yul\":1238:1247   */\n  mul\n    /* \"#utility.yul\":1227:1247   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:1253   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1259:1336   */\ntag_28:\n    /* \"#utility.yul\":1296:1303   */\n  0x00\n    /* \"#utility.yul\":1325:1330   */\n  dup2\n    /* \"#utility.yul\":1314:1330   */\n  swap1\n  pop\n    /* \"#utility.yul\":1259:1336   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1342:1522   */\ntag_32:\n    /* \"#utility.yul\":1390:1467   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1387:1388   */\n  0x00\n    /* \"#utility.yul\":1380:1468   */\n  mstore\n    /* \"#utility.yul\":1487:1491   */\n  0x11\n    /* \"#utility.yul\":1484:1485   */\n  0x04\n    /* \"#utility.yul\":1477:1492   */\n  mstore\n    /* \"#utility.yul\":1511:1515   */\n  0x24\n    /* \"#utility.yul\":1508:1509   */\n  0x00\n    /* \"#utility.yul\":1501:1516   */\n  revert\n    /* \"#utility.yul\":1651:1768   */\ntag_22:\n    /* \"#utility.yul\":1760:1761   */\n  0x00\n    /* \"#utility.yul\":1757:1758   */\n  dup1\n    /* \"#utility.yul\":1750:1762   */\n  revert\n    /* \"#utility.yul\":1774:1896   */\ntag_18:\n    /* \"#utility.yul\":1847:1871   */\n  tag_44\n    /* \"#utility.yul\":1865:1870   */\n  dup2\n    /* \"#utility.yul\":1847:1871   */\n  tag_28\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1840:1845   */\n  dup2\n    /* \"#utility.yul\":1837:1872   */\n  eq\n    /* \"#utility.yul\":1827:1890   */\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1886:1887   */\n  0x00\n    /* \"#utility.yul\":1883:1884   */\n  dup1\n    /* \"#utility.yul\":1876:1888   */\n  revert\n    /* \"#utility.yul\":1827:1890   */\ntag_45:\n    /* \"#utility.yul\":1774:1896   */\n  pop\n  jump\t// out\n    /* \"TokenSell.sol\":125:743  contract Tokensell{\r... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"TokenSell.sol\":125:743  contract Tokensell{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x180dc0ac\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3197cbb6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x55cf0a69\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x78e97925\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8abe09f2\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"TokenSell.sol\":262:330  address public axsToken = 0x0aa7726bc0cB085A3C4fbE3B09b91DD7E27f7fea */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenSell.sol\":178:197  uint public endTime */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenSell.sol\":513:740  function receiveUSDT() public payable{\r... */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"TokenSell.sol\":150:171  uint public startTime */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenSell.sol\":204:249  uint public now = block.timestamp * 1 minutes */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenSell.sol\":262:330  address public axsToken = 0x0aa7726bc0cB085A3C4fbE3B09b91DD7E27f7fea */\n    tag_9:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"TokenSell.sol\":178:197  uint public endTime */\n    tag_14:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"TokenSell.sol\":513:740  function receiveUSDT() public payable{\r... */\n    tag_18:\n        /* \"TokenSell.sol\":581:588  endTime */\n      sload(0x01)\n        /* \"TokenSell.sol\":569:578  startTime */\n      sload(0x00)\n        /* \"TokenSell.sol\":569:588  startTime < endTime */\n      lt\n        /* \"TokenSell.sol\":561:589  require(startTime < endTime) */\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n        /* \"TokenSell.sol\":626:633  endTime */\n      sload(0x01)\n        /* \"TokenSell.sol\":608:623  block.timestamp */\n      timestamp\n        /* \"TokenSell.sol\":608:633  block.timestamp < endTime */\n      lt\n        /* \"TokenSell.sol\":600:634  require(block.timestamp < endTime) */\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n        /* \"TokenSell.sol\":665:666  0 */\n      0x00\n        /* \"TokenSell.sol\":653:662  msg.value */\n      callvalue\n        /* \"TokenSell.sol\":653:666  msg.value > 0 */\n      gt\n        /* \"TokenSell.sol\":645:667  require(msg.value > 0) */\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n        /* \"TokenSell.sol\":685:693  axsToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TokenSell.sol\":678:703  IERC20(axsToken).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"TokenSell.sol\":704:714  msg.sender */\n      caller\n        /* \"TokenSell.sol\":728:731  100 */\n      0x64\n        /* \"TokenSell.sol\":716:725  msg.value */\n      callvalue\n        /* \"TokenSell.sol\":716:731  msg.value * 100 */\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"TokenSell.sol\":678:732  IERC20(axsToken).transfer(msg.sender, msg.value * 100) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_33\n      swap3\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_37\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_37:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      pop\n        /* \"TokenSell.sol\":513:740  function receiveUSDT() public payable{\r... */\n      jump\t// out\n        /* \"TokenSell.sol\":150:171  uint public startTime */\n    tag_21:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"TokenSell.sol\":204:249  uint public now = block.timestamp * 1 minutes */\n    tag_25:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:144   */\n    tag_41:\n        /* \"#utility.yul\":61:66   */\n      0x00\n        /* \"#utility.yul\":92:98   */\n      dup2\n        /* \"#utility.yul\":86:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":108:138   */\n      tag_43\n        /* \"#utility.yul\":132:137   */\n      dup2\n        /* \"#utility.yul\":108:138   */\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":7:144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:495   */\n    tag_39:\n        /* \"#utility.yul\":217:223   */\n      0x00\n        /* \"#utility.yul\":266:268   */\n      0x20\n        /* \"#utility.yul\":254:263   */\n      dup3\n        /* \"#utility.yul\":245:252   */\n      dup5\n        /* \"#utility.yul\":241:264   */\n      sub\n        /* \"#utility.yul\":237:269   */\n      slt\n        /* \"#utility.yul\":234:353   */\n      iszero\n      tag_46\n      jumpi\n        /* \"#utility.yul\":272:351   */\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":234:353   */\n    tag_46:\n        /* \"#utility.yul\":392:393   */\n      0x00\n        /* \"#utility.yul\":417:478   */\n      tag_49\n        /* \"#utility.yul\":470:477   */\n      dup5\n        /* \"#utility.yul\":461:467   */\n      dup3\n        /* \"#utility.yul\":450:459   */\n      dup6\n        /* \"#utility.yul\":446:468   */\n      add\n        /* \"#utility.yul\":417:478   */\n      tag_41\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":407:478   */\n      swap2\n      pop\n        /* \"#utility.yul\":363:488   */\n      pop\n        /* \"#utility.yul\":150:495   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":501:619   */\n    tag_50:\n        /* \"#utility.yul\":588:612   */\n      tag_52\n        /* \"#utility.yul\":606:611   */\n      dup2\n        /* \"#utility.yul\":588:612   */\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":583:586   */\n      dup3\n        /* \"#utility.yul\":576:613   */\n      mstore\n        /* \"#utility.yul\":501:619   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":625:743   */\n    tag_54:\n        /* \"#utility.yul\":712:736   */\n      tag_56\n        /* \"#utility.yul\":730:735   */\n      dup2\n        /* \"#utility.yul\":712:736   */\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":707:710   */\n      dup3\n        /* \"#utility.yul\":700:737   */\n      mstore\n        /* \"#utility.yul\":625:743   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":749:971   */\n    tag_11:\n        /* \"#utility.yul\":842:846   */\n      0x00\n        /* \"#utility.yul\":880:882   */\n      0x20\n        /* \"#utility.yul\":869:878   */\n      dup3\n        /* \"#utility.yul\":865:883   */\n      add\n        /* \"#utility.yul\":857:883   */\n      swap1\n      pop\n        /* \"#utility.yul\":893:964   */\n      tag_59\n        /* \"#utility.yul\":961:962   */\n      0x00\n        /* \"#utility.yul\":950:959   */\n      dup4\n        /* \"#utility.yul\":946:963   */\n      add\n        /* \"#utility.yul\":937:943   */\n      dup5\n        /* \"#utility.yul\":893:964   */\n      tag_50\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":749:971   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":977:1309   */\n    tag_34:\n        /* \"#utility.yul\":1098:1102   */\n      0x00\n        /* \"#utility.yul\":1136:1138   */\n      0x40\n        /* \"#utility.yul\":1125:1134   */\n      dup3\n        /* \"#utility.yul\":1121:1139   */\n      add\n        /* \"#utility.yul\":1113:1139   */\n      swap1\n      pop\n        /* \"#utility.yul\":1149:1220   */\n      tag_61\n        /* \"#utility.yul\":1217:1218   */\n      0x00\n        /* \"#utility.yul\":1206:1215   */\n      dup4\n        /* \"#utility.yul\":1202:1219   */\n      add\n        /* \"#utility.yul\":1193:1199   */\n      dup6\n        /* \"#utility.yul\":1149:1220   */\n      tag_50\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1230:1302   */\n      tag_62\n        /* \"#utility.yul\":1298:1300   */\n      0x20\n        /* \"#utility.yul\":1287:1296   */\n      dup4\n        /* \"#utility.yul\":1283:1301   */\n      add\n        /* \"#utility.yul\":1274:1280   */\n      dup5\n        /* \"#utility.yul\":1230:1302   */\n      tag_54\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":977:1309   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1315:1537   */\n    tag_16:\n        /* \"#utility.yul\":1408:1412   */\n      0x00\n        /* \"#utility.yul\":1446:1448   */\n      0x20\n        /* \"#utility.yul\":1435:1444   */\n      dup3\n        /* \"#utility.yul\":1431:1449   */\n      add\n        /* \"#utility.yul\":1423:1449   */\n      swap1\n      pop\n        /* \"#utility.yul\":1459:1530   */\n      tag_64\n        /* \"#utility.yul\":1527:1528   */\n      0x00\n        /* \"#utility.yul\":1516:1525   */\n      dup4\n        /* \"#utility.yul\":1512:1529   */\n      add\n        /* \"#utility.yul\":1503:1509   */\n      dup5\n        /* \"#utility.yul\":1459:1530   */\n      tag_54\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1315:1537   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1624:1972   */\n    tag_32:\n        /* \"#utility.yul\":1664:1671   */\n      0x00\n        /* \"#utility.yul\":1687:1707   */\n      tag_68\n        /* \"#utility.yul\":1705:1706   */\n      dup3\n        /* \"#utility.yul\":1687:1707   */\n      tag_57\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1682:1707   */\n      swap2\n      pop\n        /* \"#utility.yul\":1721:1741   */\n      tag_69\n        /* \"#utility.yul\":1739:1740   */\n      dup4\n        /* \"#utility.yul\":1721:1741   */\n      tag_57\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1716:1741   */\n      swap3\n      pop\n        /* \"#utility.yul\":1909:1910   */\n      dup2\n        /* \"#utility.yul\":1841:1907   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1837:1911   */\n      div\n        /* \"#utility.yul\":1834:1835   */\n      dup4\n        /* \"#utility.yul\":1831:1912   */\n      gt\n        /* \"#utility.yul\":1826:1827   */\n      dup3\n        /* \"#utility.yul\":1819:1828   */\n      iszero\n        /* \"#utility.yul\":1812:1829   */\n      iszero\n        /* \"#utility.yul\":1808:1913   */\n      and\n        /* \"#utility.yul\":1805:1936   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":1916:1934   */\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1805:1936   */\n    tag_70:\n        /* \"#utility.yul\":1964:1965   */\n      dup3\n        /* \"#utility.yul\":1961:1962   */\n      dup3\n        /* \"#utility.yul\":1957:1966   */\n      mul\n        /* \"#utility.yul\":1946:1966   */\n      swap1\n      pop\n        /* \"#utility.yul\":1624:1972   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1978:2074   */\n    tag_53:\n        /* \"#utility.yul\":2015:2022   */\n      0x00\n        /* \"#utility.yul\":2044:2068   */\n      tag_74\n        /* \"#utility.yul\":2062:2067   */\n      dup3\n        /* \"#utility.yul\":2044:2068   */\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2033:2068   */\n      swap1\n      pop\n        /* \"#utility.yul\":1978:2074   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2080:2170   */\n    tag_76:\n        /* \"#utility.yul\":2114:2121   */\n      0x00\n        /* \"#utility.yul\":2157:2162   */\n      dup2\n        /* \"#utility.yul\":2150:2163   */\n      iszero\n        /* \"#utility.yul\":2143:2164   */\n      iszero\n        /* \"#utility.yul\":2132:2164   */\n      swap1\n      pop\n        /* \"#utility.yul\":2080:2170   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2176:2302   */\n    tag_75:\n        /* \"#utility.yul\":2213:2220   */\n      0x00\n        /* \"#utility.yul\":2253:2295   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2246:2251   */\n      dup3\n        /* \"#utility.yul\":2242:2296   */\n      and\n        /* \"#utility.yul\":2231:2296   */\n      swap1\n      pop\n        /* \"#utility.yul\":2176:2302   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2308:2385   */\n    tag_57:\n        /* \"#utility.yul\":2345:2352   */\n      0x00\n        /* \"#utility.yul\":2374:2379   */\n      dup2\n        /* \"#utility.yul\":2363:2379   */\n      swap1\n      pop\n        /* \"#utility.yul\":2308:2385   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2391:2571   */\n    tag_72:\n        /* \"#utility.yul\":2439:2516   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2436:2437   */\n      0x00\n        /* \"#utility.yul\":2429:2517   */\n      mstore\n        /* \"#utility.yul\":2536:2540   */\n      0x11\n        /* \"#utility.yul\":2533:2534   */\n      0x04\n        /* \"#utility.yul\":2526:2541   */\n      mstore\n        /* \"#utility.yul\":2560:2564   */\n      0x24\n        /* \"#utility.yul\":2557:2558   */\n      0x00\n        /* \"#utility.yul\":2550:2565   */\n      revert\n        /* \"#utility.yul\":2700:2817   */\n    tag_48:\n        /* \"#utility.yul\":2809:2810   */\n      0x00\n        /* \"#utility.yul\":2806:2807   */\n      dup1\n        /* \"#utility.yul\":2799:2811   */\n      revert\n        /* \"#utility.yul\":2823:2939   */\n    tag_44:\n        /* \"#utility.yul\":2893:2914   */\n      tag_85\n        /* \"#utility.yul\":2908:2913   */\n      dup2\n        /* \"#utility.yul\":2893:2914   */\n      tag_76\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":2886:2891   */\n      dup2\n        /* \"#utility.yul\":2883:2915   */\n      eq\n        /* \"#utility.yul\":2873:2933   */\n      tag_86\n      jumpi\n        /* \"#utility.yul\":2929:2930   */\n      0x00\n        /* \"#utility.yul\":2926:2927   */\n      dup1\n        /* \"#utility.yul\":2919:2931   */\n      revert\n        /* \"#utility.yul\":2873:2933   */\n    tag_86:\n        /* \"#utility.yul\":2823:2939   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201d1a0603ba6b117e9e93c915fb02a0e19372461fad88f176546638fb54fdeb9264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_117": {
									"entryPoint": null,
									"id": 117,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 469,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1899:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:2",
														"type": ""
													}
												],
												"src": "7:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:2"
															},
															"nodeType": "YulIf",
															"src": "243:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:2",
														"type": ""
													}
												],
												"src": "156:351:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:2",
														"type": ""
													}
												],
												"src": "513:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "638:261:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "648:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "671:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "653:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "653:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "648:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "682:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "705:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "687:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "687:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "682:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "845:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "847:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "847:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "847:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "766:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "773:66:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "841:1:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:74:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "763:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:81:2"
															},
															"nodeType": "YulIf",
															"src": "760:107:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "877:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "888:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "891:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "884:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "884:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "877:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "625:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "628:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "634:3:2",
														"type": ""
													}
												],
												"src": "594:305:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "953:300:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "963:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "986:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "968:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "963:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "997:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1020:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1002:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1002:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "997:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1195:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1197:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1197:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1197:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1107:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1100:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1100:9:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1093:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1093:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1115:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1122:66:2",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1190:1:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "1118:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1118:74:2"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1112:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:81:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1089:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1089:105:2"
															},
															"nodeType": "YulIf",
															"src": "1086:131:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1227:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1242:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1245:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1238:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1238:9:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "1227:7:2"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "936:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "939:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "945:7:2",
														"type": ""
													}
												],
												"src": "905:348:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1304:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1314:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1325:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1314:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1286:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1296:7:2",
														"type": ""
													}
												],
												"src": "1259:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1370:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1387:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1390:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1380:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1380:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1487:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1477:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1477:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1477:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1508:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1511:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1501:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1501:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1342:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1617:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1634:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1627:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1627:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1627:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1528:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1740:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1757:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1750:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1750:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1750:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1651:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1817:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1874:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1883:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1876:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1876:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1876:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1840:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1865:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1847:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1847:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1837:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1837:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1830:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1830:43:2"
															},
															"nodeType": "YulIf",
															"src": "1827:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1810:5:2",
														"type": ""
													}
												],
												"src": "1774:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052603c426100119190610171565b600255730aa7726bc0cb085a3c4fbe3b09b91dd7e27f7fea600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561007557600080fd5b50604051610637380380610637833981810160405281019061009791906100ee565b603c816100a49190610171565b426100af919061011b565b600081905550603c816100c29190610171565b426100cd919061011b565b60018190555050610220565b6000815190506100e881610209565b92915050565b60006020828403121561010457610103610204565b5b6000610112848285016100d9565b91505092915050565b6000610126826101cb565b9150610131836101cb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610166576101656101d5565b5b828201905092915050565b600061017c826101cb565b9150610187836101cb565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156101c0576101bf6101d5565b5b828202905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b610212816101cb565b811461021d57600080fd5b50565b6104088061022f6000396000f3fe60806040526004361061004a5760003560e01c8063180dc0ac1461004f5780633197cbb61461007a57806355cf0a69146100a557806378e97925146100af5780638abe09f2146100da575b600080fd5b34801561005b57600080fd5b50610064610105565b6040516100719190610286565b60405180910390f35b34801561008657600080fd5b5061008f61012b565b60405161009c91906102ca565b60405180910390f35b6100ad610131565b005b3480156100bb57600080fd5b506100c461021a565b6040516100d191906102ca565b60405180910390f35b3480156100e657600080fd5b506100ef610220565b6040516100fc91906102ca565b60405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b6001546000541061014157600080fd5b600154421061014f57600080fd5b6000341161015c57600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb336064346101a891906102e5565b6040518363ffffffff1660e01b81526004016101c59291906102a1565b602060405180830381600087803b1580156101df57600080fd5b505af11580156101f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610217919061023b565b50565b60005481565b60025481565b600081519050610235816103bb565b92915050565b600060208284031215610251576102506103b6565b5b600061025f84828501610226565b91505092915050565b6102718161033f565b82525050565b6102808161037d565b82525050565b600060208201905061029b6000830184610268565b92915050565b60006040820190506102b66000830185610268565b6102c36020830184610277565b9392505050565b60006020820190506102df6000830184610277565b92915050565b60006102f08261037d565b91506102fb8361037d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561033457610333610387565b5b828202905092915050565b600061034a8261035d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b6103c481610351565b81146103cf57600080fd5b5056fea26469706673582212201d1a0603ba6b117e9e93c915fb02a0e19372461fad88f176546638fb54fdeb9264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x3C TIMESTAMP PUSH2 0x11 SWAP2 SWAP1 PUSH2 0x171 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH20 0xAA7726BC0CB085A3C4FBE3B09B91DD7E27F7FEA PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x637 CODESIZE SUB DUP1 PUSH2 0x637 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0xEE JUMP JUMPDEST PUSH1 0x3C DUP2 PUSH2 0xA4 SWAP2 SWAP1 PUSH2 0x171 JUMP JUMPDEST TIMESTAMP PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x11B JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x3C DUP2 PUSH2 0xC2 SWAP2 SWAP1 PUSH2 0x171 JUMP JUMPDEST TIMESTAMP PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x11B JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP PUSH2 0x220 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE8 DUP2 PUSH2 0x209 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x104 JUMPI PUSH2 0x103 PUSH2 0x204 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x112 DUP5 DUP3 DUP6 ADD PUSH2 0xD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x126 DUP3 PUSH2 0x1CB JUMP JUMPDEST SWAP2 POP PUSH2 0x131 DUP4 PUSH2 0x1CB JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x166 JUMPI PUSH2 0x165 PUSH2 0x1D5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17C DUP3 PUSH2 0x1CB JUMP JUMPDEST SWAP2 POP PUSH2 0x187 DUP4 PUSH2 0x1CB JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1C0 JUMPI PUSH2 0x1BF PUSH2 0x1D5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x212 DUP2 PUSH2 0x1CB JUMP JUMPDEST DUP2 EQ PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x408 DUP1 PUSH2 0x22F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x180DC0AC EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x3197CBB6 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x55CF0A69 EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x8ABE09F2 EQ PUSH2 0xDA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0x105 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x286 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8F PUSH2 0x12B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x2CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAD PUSH2 0x131 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC4 PUSH2 0x21A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x2CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEF PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x2CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD LT PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP LT PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x64 CALLVALUE PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C5 SWAP3 SWAP2 SWAP1 PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x23B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x235 DUP2 PUSH2 0x3BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x251 JUMPI PUSH2 0x250 PUSH2 0x3B6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25F DUP5 DUP3 DUP6 ADD PUSH2 0x226 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x271 DUP2 PUSH2 0x33F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x280 DUP2 PUSH2 0x37D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x268 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x268 JUMP JUMPDEST PUSH2 0x2C3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x277 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2DF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x277 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F0 DUP3 PUSH2 0x37D JUMP JUMPDEST SWAP2 POP PUSH2 0x2FB DUP4 PUSH2 0x37D JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x334 JUMPI PUSH2 0x333 PUSH2 0x387 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34A DUP3 PUSH2 0x35D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3C4 DUP2 PUSH2 0x351 JUMP JUMPDEST DUP2 EQ PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR BYTE MOD SUB 0xBA PUSH12 0x117E9E93C915FB02A0E19372 CHAINID 0x1F 0xAD DUP9 CALL PUSH23 0x546638FB54FDEB9264736F6C6343000807003300000000 ",
							"sourceMap": "125:618:1:-:0;;;240:9;222:15;:27;;;;:::i;:::-;204:45;;288:42;262:68;;;;;;;;;;;;;;;;;;;;339:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;424:9;413:8;:20;;;;:::i;:::-;395:15;:38;;;;:::i;:::-;383:9;:50;;;;484:9;473:8;:20;;;;:::i;:::-;455:15;:38;;;;:::i;:::-;445:7;:48;;;;339:164;125:618;;7:143:2;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:305::-;634:3;653:20;671:1;653:20;:::i;:::-;648:25;;687:20;705:1;687:20;:::i;:::-;682:25;;841:1;773:66;769:74;766:1;763:81;760:107;;;847:18;;:::i;:::-;760:107;891:1;888;884:9;877:16;;594:305;;;;:::o;905:348::-;945:7;968:20;986:1;968:20;:::i;:::-;963:25;;1002:20;1020:1;1002:20;:::i;:::-;997:25;;1190:1;1122:66;1118:74;1115:1;1112:81;1107:1;1100:9;1093:17;1089:105;1086:131;;;1197:18;;:::i;:::-;1086:131;1245:1;1242;1238:9;1227:20;;905:348;;;;:::o;1259:77::-;1296:7;1325:5;1314:16;;1259:77;;;:::o;1342:180::-;1390:77;1387:1;1380:88;1487:4;1484:1;1477:15;1511:4;1508:1;1501:15;1651:117;1760:1;1757;1750:12;1774:122;1847:24;1865:5;1847:24;:::i;:::-;1840:5;1837:35;1827:63;;1886:1;1883;1876:12;1827:63;1774:122;:::o;125:618:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@axsToken_93": {
									"entryPoint": 261,
									"id": 93,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@endTime_84": {
									"entryPoint": 299,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@now_90": {
									"entryPoint": 544,
									"id": 90,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@receiveUSDT_153": {
									"entryPoint": 305,
									"id": 153,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startTime_82": {
									"entryPoint": 538,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 673,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 849,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 903,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 950,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2942:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "92:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "77:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "132:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "108:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "108:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "45:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "53:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:2",
														"type": ""
													}
												],
												"src": "7:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "224:271:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "270:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "272:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "272:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "272:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "245:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "254:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "241:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "241:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "266:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:32:2"
															},
															"nodeType": "YulIf",
															"src": "234:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "363:125:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "378:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "392:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "382:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "407:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "450:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "461:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "446:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "446:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "470:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "417:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "417:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "407:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "194:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "205:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "217:6:2",
														"type": ""
													}
												],
												"src": "150:345:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "566:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "583:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "606:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "588:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "588:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "576:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "576:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "576:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "554:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "561:3:2",
														"type": ""
													}
												],
												"src": "501:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "690:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "707:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "730:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "712:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "712:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "700:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "700:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "700:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "678:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "685:3:2",
														"type": ""
													}
												],
												"src": "625:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "847:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "857:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "869:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "865:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "857:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "937:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "950:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "961:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "946:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "946:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "893:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "893:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "893:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "819:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "831:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "842:4:2",
														"type": ""
													}
												],
												"src": "749:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1103:206:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1113:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1125:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1136:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1113:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1193:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1206:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1217:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1202:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1202:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1149:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1149:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1274:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1287:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1298:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1283:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1283:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1230:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1230:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1230:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1067:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1079:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1087:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1098:4:2",
														"type": ""
													}
												],
												"src": "977:332:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1413:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1423:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1435:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1446:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1431:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1431:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1423:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1503:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1516:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1527:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1512:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1512:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1459:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1459:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1459:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1385:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1397:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1408:4:2",
														"type": ""
													}
												],
												"src": "1315:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1583:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1593:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1609:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1603:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1603:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1593:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1576:6:2",
														"type": ""
													}
												],
												"src": "1543:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:300:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1682:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1705:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1687:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1682:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1716:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1739:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1721:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1721:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1716:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1914:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1916:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1916:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1916:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1826:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1819:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1819:9:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1812:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1812:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1834:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1841:66:2",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1909:1:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "1837:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1837:74:2"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1831:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1831:81:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1808:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1808:105:2"
															},
															"nodeType": "YulIf",
															"src": "1805:131:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1946:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1961:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1964:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1957:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1957:9:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "1946:7:2"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1655:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1658:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "1664:7:2",
														"type": ""
													}
												],
												"src": "1624:348:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2023:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2033:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2062:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2044:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2044:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2033:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2005:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2015:7:2",
														"type": ""
													}
												],
												"src": "1978:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2122:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2132:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2157:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2150:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2150:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2143:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2143:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2132:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2104:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2114:7:2",
														"type": ""
													}
												],
												"src": "2080:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2221:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2231:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2246:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2253:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2242:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2242:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2231:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2203:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2213:7:2",
														"type": ""
													}
												],
												"src": "2176:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2353:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2363:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2374:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2363:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2335:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2345:7:2",
														"type": ""
													}
												],
												"src": "2308:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2419:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2436:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2439:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2429:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2429:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2429:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2533:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2536:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2526:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2526:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2526:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2557:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2560:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2550:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2550:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2550:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2391:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2666:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2676:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2676:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2676:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2577:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2789:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2806:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2809:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2799:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2799:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2799:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2700:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2863:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2917:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2926:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2929:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2919:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2919:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2919:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2886:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2908:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2893:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2893:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2883:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2883:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2876:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2876:40:2"
															},
															"nodeType": "YulIf",
															"src": "2873:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2856:5:2",
														"type": ""
													}
												],
												"src": "2823:116:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004a5760003560e01c8063180dc0ac1461004f5780633197cbb61461007a57806355cf0a69146100a557806378e97925146100af5780638abe09f2146100da575b600080fd5b34801561005b57600080fd5b50610064610105565b6040516100719190610286565b60405180910390f35b34801561008657600080fd5b5061008f61012b565b60405161009c91906102ca565b60405180910390f35b6100ad610131565b005b3480156100bb57600080fd5b506100c461021a565b6040516100d191906102ca565b60405180910390f35b3480156100e657600080fd5b506100ef610220565b6040516100fc91906102ca565b60405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b6001546000541061014157600080fd5b600154421061014f57600080fd5b6000341161015c57600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb336064346101a891906102e5565b6040518363ffffffff1660e01b81526004016101c59291906102a1565b602060405180830381600087803b1580156101df57600080fd5b505af11580156101f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610217919061023b565b50565b60005481565b60025481565b600081519050610235816103bb565b92915050565b600060208284031215610251576102506103b6565b5b600061025f84828501610226565b91505092915050565b6102718161033f565b82525050565b6102808161037d565b82525050565b600060208201905061029b6000830184610268565b92915050565b60006040820190506102b66000830185610268565b6102c36020830184610277565b9392505050565b60006020820190506102df6000830184610277565b92915050565b60006102f08261037d565b91506102fb8361037d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561033457610333610387565b5b828202905092915050565b600061034a8261035d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b6103c481610351565b81146103cf57600080fd5b5056fea26469706673582212201d1a0603ba6b117e9e93c915fb02a0e19372461fad88f176546638fb54fdeb9264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x180DC0AC EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x3197CBB6 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x55CF0A69 EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x8ABE09F2 EQ PUSH2 0xDA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0x105 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x286 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8F PUSH2 0x12B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x2CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAD PUSH2 0x131 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC4 PUSH2 0x21A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x2CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEF PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x2CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD LT PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP LT PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x64 CALLVALUE PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C5 SWAP3 SWAP2 SWAP1 PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x23B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x235 DUP2 PUSH2 0x3BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x251 JUMPI PUSH2 0x250 PUSH2 0x3B6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25F DUP5 DUP3 DUP6 ADD PUSH2 0x226 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x271 DUP2 PUSH2 0x33F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x280 DUP2 PUSH2 0x37D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x268 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x268 JUMP JUMPDEST PUSH2 0x2C3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x277 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2DF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x277 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F0 DUP3 PUSH2 0x37D JUMP JUMPDEST SWAP2 POP PUSH2 0x2FB DUP4 PUSH2 0x37D JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x334 JUMPI PUSH2 0x333 PUSH2 0x387 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34A DUP3 PUSH2 0x35D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3C4 DUP2 PUSH2 0x351 JUMP JUMPDEST DUP2 EQ PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR BYTE MOD SUB 0xBA PUSH12 0x117E9E93C915FB02A0E19372 CHAINID 0x1F 0xAD DUP9 CALL PUSH23 0x546638FB54FDEB9264736F6C6343000807003300000000 ",
							"sourceMap": "125:618:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;262:68;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;178:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;513:227;;;:::i;:::-;;150:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;204:45;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;262:68;;;;;;;;;;;;;:::o;178:19::-;;;;:::o;513:227::-;581:7;;569:9;;:19;561:28;;;;;;626:7;;608:15;:25;600:34;;;;;;665:1;653:9;:13;645:22;;;;;;685:8;;;;;;;;;;;678:25;;;704:10;728:3;716:9;:15;;;;:::i;:::-;678:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;513:227::o;150:21::-;;;;:::o;204:45::-;;;;:::o;7:137:2:-;61:5;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;7:137;;;;:::o;150:345::-;217:6;266:2;254:9;245:7;241:23;237:32;234:119;;;272:79;;:::i;:::-;234:119;392:1;417:61;470:7;461:6;450:9;446:22;417:61;:::i;:::-;407:71;;363:125;150:345;;;;:::o;501:118::-;588:24;606:5;588:24;:::i;:::-;583:3;576:37;501:118;;:::o;625:::-;712:24;730:5;712:24;:::i;:::-;707:3;700:37;625:118;;:::o;749:222::-;842:4;880:2;869:9;865:18;857:26;;893:71;961:1;950:9;946:17;937:6;893:71;:::i;:::-;749:222;;;;:::o;977:332::-;1098:4;1136:2;1125:9;1121:18;1113:26;;1149:71;1217:1;1206:9;1202:17;1193:6;1149:71;:::i;:::-;1230:72;1298:2;1287:9;1283:18;1274:6;1230:72;:::i;:::-;977:332;;;;;:::o;1315:222::-;1408:4;1446:2;1435:9;1431:18;1423:26;;1459:71;1527:1;1516:9;1512:17;1503:6;1459:71;:::i;:::-;1315:222;;;;:::o;1624:348::-;1664:7;1687:20;1705:1;1687:20;:::i;:::-;1682:25;;1721:20;1739:1;1721:20;:::i;:::-;1716:25;;1909:1;1841:66;1837:74;1834:1;1831:81;1826:1;1819:9;1812:17;1808:105;1805:131;;;1916:18;;:::i;:::-;1805:131;1964:1;1961;1957:9;1946:20;;1624:348;;;;:::o;1978:96::-;2015:7;2044:24;2062:5;2044:24;:::i;:::-;2033:35;;1978:96;;;:::o;2080:90::-;2114:7;2157:5;2150:13;2143:21;2132:32;;2080:90;;;:::o;2176:126::-;2213:7;2253:42;2246:5;2242:54;2231:65;;2176:126;;;:::o;2308:77::-;2345:7;2374:5;2363:16;;2308:77;;;:::o;2391:180::-;2439:77;2436:1;2429:88;2536:4;2533:1;2526:15;2560:4;2557:1;2550:15;2700:117;2809:1;2806;2799:12;2823:116;2893:21;2908:5;2893:21;:::i;:::-;2886:5;2883:32;2873:60;;2929:1;2926;2919:12;2873:60;2823:116;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "206400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"axsToken()": "2492",
								"endTime()": "2429",
								"now()": "2495",
								"receiveUSDT()": "infinite",
								"startTime()": "2473"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 125,
									"end": 743,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 125,
									"end": 743,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 125,
									"end": 743,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 240,
									"end": 249,
									"name": "PUSH",
									"source": 1,
									"value": "3C"
								},
								{
									"begin": 222,
									"end": 237,
									"name": "TIMESTAMP",
									"source": 1
								},
								{
									"begin": 222,
									"end": 249,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 249,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 222,
									"end": 249,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 222,
									"end": 249,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 222,
									"end": 249,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 222,
									"end": 249,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 249,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 204,
									"end": 249,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 204,
									"end": 249,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 288,
									"end": 330,
									"name": "PUSH",
									"source": 1,
									"value": "AA7726BC0CB085A3C4FBE3B09B91DD7E27F7FEA"
								},
								{
									"begin": 262,
									"end": 330,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 262,
									"end": 330,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 330,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 262,
									"end": 330,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 262,
									"end": 330,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 262,
									"end": 330,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 262,
									"end": 330,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 262,
									"end": 330,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 262,
									"end": 330,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 262,
									"end": 330,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 262,
									"end": 330,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 262,
									"end": 330,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 262,
									"end": 330,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 262,
									"end": 330,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 262,
									"end": 330,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 262,
									"end": 330,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 262,
									"end": 330,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 262,
									"end": 330,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 262,
									"end": 330,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 262,
									"end": 330,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 339,
									"end": 503,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 339,
									"end": 503,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 339,
									"end": 503,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 339,
									"end": 503,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 339,
									"end": 503,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 339,
									"end": 503,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 503,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 339,
									"end": 503,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 339,
									"end": 503,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 339,
									"end": 503,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 339,
									"end": 503,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 339,
									"end": 503,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 339,
									"end": 503,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 339,
									"end": 503,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 339,
									"end": 503,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 339,
									"end": 503,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 339,
									"end": 503,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 339,
									"end": 503,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 339,
									"end": 503,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 339,
									"end": 503,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 339,
									"end": 503,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 339,
									"end": 503,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 339,
									"end": 503,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 339,
									"end": 503,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 339,
									"end": 503,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 339,
									"end": 503,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 339,
									"end": 503,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 339,
									"end": 503,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 339,
									"end": 503,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 339,
									"end": 503,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 339,
									"end": 503,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 339,
									"end": 503,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 339,
									"end": 503,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 339,
									"end": 503,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 339,
									"end": 503,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 424,
									"end": 433,
									"name": "PUSH",
									"source": 1,
									"value": "3C"
								},
								{
									"begin": 413,
									"end": 421,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 413,
									"end": 433,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 413,
									"end": 433,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 413,
									"end": 433,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 413,
									"end": 433,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 413,
									"end": 433,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 413,
									"end": 433,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 413,
									"end": 433,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 395,
									"end": 410,
									"name": "TIMESTAMP",
									"source": 1
								},
								{
									"begin": 395,
									"end": 433,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 395,
									"end": 433,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 395,
									"end": 433,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 395,
									"end": 433,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 395,
									"end": 433,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 395,
									"end": 433,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 395,
									"end": 433,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 383,
									"end": 392,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 383,
									"end": 433,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 383,
									"end": 433,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 383,
									"end": 433,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 383,
									"end": 433,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 484,
									"end": 493,
									"name": "PUSH",
									"source": 1,
									"value": "3C"
								},
								{
									"begin": 473,
									"end": 481,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 473,
									"end": 493,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 473,
									"end": 493,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 473,
									"end": 493,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 473,
									"end": 493,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 473,
									"end": 493,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 473,
									"end": 493,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 473,
									"end": 493,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 455,
									"end": 470,
									"name": "TIMESTAMP",
									"source": 1
								},
								{
									"begin": 455,
									"end": 493,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 455,
									"end": 493,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 455,
									"end": 493,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 455,
									"end": 493,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 455,
									"end": 493,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 455,
									"end": 493,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 455,
									"end": 493,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 445,
									"end": 452,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 445,
									"end": 493,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 445,
									"end": 493,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 445,
									"end": 493,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 445,
									"end": 493,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 339,
									"end": 503,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 125,
									"end": 743,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 125,
									"end": 743,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 899,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 594,
									"end": 899,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 634,
									"end": 637,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 653,
									"end": 673,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 671,
									"end": 672,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 653,
									"end": 673,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 653,
									"end": 673,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 653,
									"end": 673,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 653,
									"end": 673,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 648,
									"end": 673,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 648,
									"end": 673,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 687,
									"end": 707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 705,
									"end": 706,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 687,
									"end": 707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 687,
									"end": 707,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 687,
									"end": 707,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 687,
									"end": 707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 682,
									"end": 707,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 682,
									"end": 707,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 841,
									"end": 842,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 773,
									"end": 839,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 769,
									"end": 843,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 766,
									"end": 767,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 763,
									"end": 844,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 760,
									"end": 867,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 760,
									"end": 867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 760,
									"end": 867,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 847,
									"end": 865,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 847,
									"end": 865,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 847,
									"end": 865,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 847,
									"end": 865,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 847,
									"end": 865,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 760,
									"end": 867,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 760,
									"end": 867,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 891,
									"end": 892,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 888,
									"end": 889,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 884,
									"end": 893,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 877,
									"end": 893,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 877,
									"end": 893,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 594,
									"end": 899,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 594,
									"end": 899,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 594,
									"end": 899,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 594,
									"end": 899,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 594,
									"end": 899,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 905,
									"end": 1253,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 905,
									"end": 1253,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 945,
									"end": 952,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 968,
									"end": 988,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 986,
									"end": 987,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 968,
									"end": 988,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 968,
									"end": 988,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 968,
									"end": 988,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 968,
									"end": 988,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 963,
									"end": 988,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 963,
									"end": 988,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1002,
									"end": 1022,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 1020,
									"end": 1021,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1002,
									"end": 1022,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1002,
									"end": 1022,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1002,
									"end": 1022,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 1002,
									"end": 1022,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 997,
									"end": 1022,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 997,
									"end": 1022,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1190,
									"end": 1191,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1122,
									"end": 1188,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1118,
									"end": 1192,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1116,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1112,
									"end": 1193,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1100,
									"end": 1109,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1093,
									"end": 1110,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1089,
									"end": 1194,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1086,
									"end": 1217,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1086,
									"end": 1217,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 1086,
									"end": 1217,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1197,
									"end": 1215,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 1197,
									"end": 1215,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 1197,
									"end": 1215,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1197,
									"end": 1215,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 1197,
									"end": 1215,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1086,
									"end": 1217,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 1086,
									"end": 1217,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1245,
									"end": 1246,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1242,
									"end": 1243,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1238,
									"end": 1247,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1227,
									"end": 1247,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1227,
									"end": 1247,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 905,
									"end": 1253,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 905,
									"end": 1253,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 905,
									"end": 1253,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 905,
									"end": 1253,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 905,
									"end": 1253,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1259,
									"end": 1336,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1259,
									"end": 1336,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1296,
									"end": 1303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1325,
									"end": 1330,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1314,
									"end": 1330,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1314,
									"end": 1330,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1259,
									"end": 1336,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1259,
									"end": 1336,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1259,
									"end": 1336,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1259,
									"end": 1336,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1342,
									"end": 1522,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 1342,
									"end": 1522,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1467,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1387,
									"end": 1388,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1380,
									"end": 1468,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1487,
									"end": 1491,
									"name": "PUSH",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1477,
									"end": 1492,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1511,
									"end": 1515,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1508,
									"end": 1509,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1516,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1651,
									"end": 1768,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1651,
									"end": 1768,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1757,
									"end": 1758,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1774,
									"end": 1896,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1774,
									"end": 1896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1847,
									"end": 1871,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 1865,
									"end": 1870,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1847,
									"end": 1871,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1847,
									"end": 1871,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1847,
									"end": 1871,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 1847,
									"end": 1871,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1840,
									"end": 1845,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1837,
									"end": 1872,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1827,
									"end": 1890,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 1827,
									"end": 1890,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1883,
									"end": 1884,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1876,
									"end": 1888,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1827,
									"end": 1890,
									"name": "tag",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 1827,
									"end": 1890,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1774,
									"end": 1896,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1774,
									"end": 1896,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 125,
									"end": 743,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 125,
									"end": 743,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 125,
									"end": 743,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 125,
									"end": 743,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 125,
									"end": 743,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 125,
									"end": 743,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 743,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 125,
									"end": 743,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 743,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201d1a0603ba6b117e9e93c915fb02a0e19372461fad88f176546638fb54fdeb9264736f6c63430008070033",
									".code": [
										{
											"begin": 125,
											"end": 743,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 125,
											"end": 743,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 125,
											"end": 743,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 125,
											"end": 743,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 125,
											"end": 743,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 125,
											"end": 743,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 125,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 125,
											"end": 743,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 125,
											"end": 743,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 743,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 125,
											"end": 743,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 125,
											"end": 743,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 125,
											"end": 743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 743,
											"name": "PUSH",
											"source": 1,
											"value": "180DC0AC"
										},
										{
											"begin": 125,
											"end": 743,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 125,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 125,
											"end": 743,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 125,
											"end": 743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 743,
											"name": "PUSH",
											"source": 1,
											"value": "3197CBB6"
										},
										{
											"begin": 125,
											"end": 743,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 125,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 125,
											"end": 743,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 125,
											"end": 743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 743,
											"name": "PUSH",
											"source": 1,
											"value": "55CF0A69"
										},
										{
											"begin": 125,
											"end": 743,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 125,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 125,
											"end": 743,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 125,
											"end": 743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 743,
											"name": "PUSH",
											"source": 1,
											"value": "78E97925"
										},
										{
											"begin": 125,
											"end": 743,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 125,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 125,
											"end": 743,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 125,
											"end": 743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 743,
											"name": "PUSH",
											"source": 1,
											"value": "8ABE09F2"
										},
										{
											"begin": 125,
											"end": 743,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 125,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 125,
											"end": 743,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 125,
											"end": 743,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 125,
											"end": 743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 125,
											"end": 743,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 743,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 262,
											"end": 330,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 262,
											"end": 330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 262,
											"end": 330,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 262,
											"end": 330,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 262,
											"end": 330,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 262,
											"end": 330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 262,
											"end": 330,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 262,
											"end": 330,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 330,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 262,
											"end": 330,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 262,
											"end": 330,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 262,
											"end": 330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 262,
											"end": 330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 262,
											"end": 330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 262,
											"end": 330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 262,
											"end": 330,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 262,
											"end": 330,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 262,
											"end": 330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 262,
											"end": 330,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 330,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 262,
											"end": 330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 262,
											"end": 330,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 262,
											"end": 330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 262,
											"end": 330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 262,
											"end": 330,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 262,
											"end": 330,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 262,
											"end": 330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 262,
											"end": 330,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 330,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 262,
											"end": 330,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 262,
											"end": 330,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 262,
											"end": 330,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 262,
											"end": 330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 262,
											"end": 330,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 178,
											"end": 197,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 178,
											"end": 197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 178,
											"end": 197,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 178,
											"end": 197,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 197,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 178,
											"end": 197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 178,
											"end": 197,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 178,
											"end": 197,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 197,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 197,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 178,
											"end": 197,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 178,
											"end": 197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 178,
											"end": 197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 178,
											"end": 197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 178,
											"end": 197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 178,
											"end": 197,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 178,
											"end": 197,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 178,
											"end": 197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 178,
											"end": 197,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 178,
											"end": 197,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 178,
											"end": 197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 178,
											"end": 197,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 178,
											"end": 197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 178,
											"end": 197,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 178,
											"end": 197,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 178,
											"end": 197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 178,
											"end": 197,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 178,
											"end": 197,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 178,
											"end": 197,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 197,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 178,
											"end": 197,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 178,
											"end": 197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 197,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 513,
											"end": 740,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 513,
											"end": 740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 513,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 513,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 513,
											"end": 740,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 513,
											"end": 740,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 513,
											"end": 740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 513,
											"end": 740,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 150,
											"end": 171,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 150,
											"end": 171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 150,
											"end": 171,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 150,
											"end": 171,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 150,
											"end": 171,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 150,
											"end": 171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 150,
											"end": 171,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 150,
											"end": 171,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 171,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 150,
											"end": 171,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 150,
											"end": 171,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 150,
											"end": 171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 150,
											"end": 171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 150,
											"end": 171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 150,
											"end": 171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 150,
											"end": 171,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 150,
											"end": 171,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 150,
											"end": 171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 150,
											"end": 171,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 150,
											"end": 171,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 150,
											"end": 171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 150,
											"end": 171,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 150,
											"end": 171,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 150,
											"end": 171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 150,
											"end": 171,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 150,
											"end": 171,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 150,
											"end": 171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 150,
											"end": 171,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 150,
											"end": 171,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 150,
											"end": 171,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 150,
											"end": 171,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 150,
											"end": 171,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 150,
											"end": 171,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 150,
											"end": 171,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 204,
											"end": 249,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 204,
											"end": 249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 204,
											"end": 249,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 204,
											"end": 249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 204,
											"end": 249,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 204,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 204,
											"end": 249,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 204,
											"end": 249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 204,
											"end": 249,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 204,
											"end": 249,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 204,
											"end": 249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 204,
											"end": 249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 204,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 204,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 204,
											"end": 249,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 204,
											"end": 249,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 204,
											"end": 249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 204,
											"end": 249,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 204,
											"end": 249,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 204,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 204,
											"end": 249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 204,
											"end": 249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 204,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 204,
											"end": 249,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 204,
											"end": 249,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 204,
											"end": 249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 204,
											"end": 249,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 204,
											"end": 249,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 204,
											"end": 249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 204,
											"end": 249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 204,
											"end": 249,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 204,
											"end": 249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 204,
											"end": 249,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 262,
											"end": 330,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 262,
											"end": 330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 262,
											"end": 330,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 262,
											"end": 330,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 262,
											"end": 330,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 262,
											"end": 330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 262,
											"end": 330,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 262,
											"end": 330,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 262,
											"end": 330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 262,
											"end": 330,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 262,
											"end": 330,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 262,
											"end": 330,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 262,
											"end": 330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 262,
											"end": 330,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 178,
											"end": 197,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 178,
											"end": 197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 178,
											"end": 197,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 178,
											"end": 197,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 178,
											"end": 197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 178,
											"end": 197,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 513,
											"end": 740,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 513,
											"end": 740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 581,
											"end": 588,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 581,
											"end": 588,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 569,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 569,
											"end": 578,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 569,
											"end": 588,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 561,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 561,
											"end": 589,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 561,
											"end": 589,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 561,
											"end": 589,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 561,
											"end": 589,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 561,
											"end": 589,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 561,
											"end": 589,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 626,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 626,
											"end": 633,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 608,
											"end": 623,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 608,
											"end": 633,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 600,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 600,
											"end": 634,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 600,
											"end": 634,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 634,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 600,
											"end": 634,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 600,
											"end": 634,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 600,
											"end": 634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 665,
											"end": 666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 662,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 653,
											"end": 666,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 645,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 645,
											"end": 667,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 645,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 667,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 645,
											"end": 667,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 645,
											"end": 667,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 645,
											"end": 667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 685,
											"end": 693,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 685,
											"end": 693,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 685,
											"end": 693,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 685,
											"end": 693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 685,
											"end": 693,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 685,
											"end": 693,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 685,
											"end": 693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 685,
											"end": 693,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 685,
											"end": 693,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 685,
											"end": 693,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 678,
											"end": 703,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 678,
											"end": 703,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 678,
											"end": 703,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 704,
											"end": 714,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 728,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 716,
											"end": 725,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 716,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 716,
											"end": 731,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 716,
											"end": 731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 716,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 716,
											"end": 731,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 716,
											"end": 731,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 716,
											"end": 731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 678,
											"end": 732,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 678,
											"end": 732,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 678,
											"end": 732,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 678,
											"end": 732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 678,
											"end": 732,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 678,
											"end": 732,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 678,
											"end": 732,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 678,
											"end": 732,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 678,
											"end": 732,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 678,
											"end": 732,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 732,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 678,
											"end": 732,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 732,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 678,
											"end": 732,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 678,
											"end": 732,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 732,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 732,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 678,
											"end": 732,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 678,
											"end": 732,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 678,
											"end": 732,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 678,
											"end": 732,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 678,
											"end": 732,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 678,
											"end": 732,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 678,
											"end": 732,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 678,
											"end": 732,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 678,
											"end": 732,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 513,
											"end": 740,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 150,
											"end": 171,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 150,
											"end": 171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 150,
											"end": 171,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 171,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 150,
											"end": 171,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 150,
											"end": 171,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 204,
											"end": 249,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 204,
											"end": 249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 204,
											"end": 249,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 204,
											"end": 249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 204,
											"end": 249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 204,
											"end": 249,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 61,
											"end": 66,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 98,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 86,
											"end": 99,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 132,
											"end": 137,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 150,
											"end": 495,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 150,
											"end": 495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 217,
											"end": 223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 268,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 254,
											"end": 263,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 245,
											"end": 252,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 241,
											"end": 264,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 237,
											"end": 269,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 234,
											"end": 353,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 234,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 234,
											"end": 353,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 272,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 272,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 272,
											"end": 351,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 272,
											"end": 351,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 272,
											"end": 351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 234,
											"end": 353,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 234,
											"end": 353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 392,
											"end": 393,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 470,
											"end": 477,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 461,
											"end": 467,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 450,
											"end": 459,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 446,
											"end": 468,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 417,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 417,
											"end": 478,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 417,
											"end": 478,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 417,
											"end": 478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 407,
											"end": 478,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 407,
											"end": 478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 363,
											"end": 488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 150,
											"end": 495,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 150,
											"end": 495,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 150,
											"end": 495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 150,
											"end": 495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 150,
											"end": 495,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 501,
											"end": 619,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 501,
											"end": 619,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 588,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 606,
											"end": 611,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 588,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 588,
											"end": 612,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 612,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 588,
											"end": 612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 586,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 576,
											"end": 613,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 501,
											"end": 619,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 501,
											"end": 619,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 501,
											"end": 619,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 625,
											"end": 743,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 625,
											"end": 743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 712,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 730,
											"end": 735,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 712,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 712,
											"end": 736,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 712,
											"end": 736,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 712,
											"end": 736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 707,
											"end": 710,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 700,
											"end": 737,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 625,
											"end": 743,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 625,
											"end": 743,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 625,
											"end": 743,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 749,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 749,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 842,
											"end": 846,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 869,
											"end": 878,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 865,
											"end": 883,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 857,
											"end": 883,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 857,
											"end": 883,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 893,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 961,
											"end": 962,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 950,
											"end": 959,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 946,
											"end": 963,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 937,
											"end": 943,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 893,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 893,
											"end": 964,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 893,
											"end": 964,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 893,
											"end": 964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 749,
											"end": 971,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 749,
											"end": 971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 749,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 749,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 749,
											"end": 971,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 977,
											"end": 1309,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 977,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1102,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1138,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1121,
											"end": 1139,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1139,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1139,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1217,
											"end": 1218,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1215,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1219,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1199,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1149,
											"end": 1220,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1220,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1149,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1298,
											"end": 1300,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1296,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1301,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1280,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1230,
											"end": 1302,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1230,
											"end": 1302,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1230,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1309,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1309,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1309,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1309,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1309,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1309,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1315,
											"end": 1537,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1315,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1408,
											"end": 1412,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1446,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1435,
											"end": 1444,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1431,
											"end": 1449,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1449,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1527,
											"end": 1528,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1516,
											"end": 1525,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1529,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1503,
											"end": 1509,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1459,
											"end": 1530,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1459,
											"end": 1530,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1459,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1537,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1537,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1624,
											"end": 1972,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1624,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1664,
											"end": 1671,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1705,
											"end": 1706,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1687,
											"end": 1707,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1687,
											"end": 1707,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1687,
											"end": 1707,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1682,
											"end": 1707,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1682,
											"end": 1707,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1721,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1739,
											"end": 1740,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1721,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1721,
											"end": 1741,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1721,
											"end": 1741,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1721,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1741,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1741,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 1907,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1837,
											"end": 1911,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1835,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1912,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1827,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1828,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1829,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1936,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1805,
											"end": 1936,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1916,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1916,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1916,
											"end": 1934,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1916,
											"end": 1934,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1916,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1936,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1805,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1965,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1961,
											"end": 1962,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 1966,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1946,
											"end": 1966,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1946,
											"end": 1966,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1972,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1972,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1972,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1972,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1972,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1978,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1978,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2015,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2062,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2033,
											"end": 2068,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2033,
											"end": 2068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1978,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1978,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1978,
											"end": 2074,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1978,
											"end": 2074,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2080,
											"end": 2170,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2080,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2157,
											"end": 2162,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2163,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2164,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2132,
											"end": 2164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2132,
											"end": 2164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2080,
											"end": 2170,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2080,
											"end": 2170,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2080,
											"end": 2170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2080,
											"end": 2170,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2176,
											"end": 2302,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2176,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2213,
											"end": 2220,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2253,
											"end": 2295,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2246,
											"end": 2251,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2296,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2231,
											"end": 2296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2231,
											"end": 2296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2302,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2302,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2302,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2302,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2308,
											"end": 2385,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2308,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2352,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2374,
											"end": 2379,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2308,
											"end": 2385,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2308,
											"end": 2385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2308,
											"end": 2385,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2308,
											"end": 2385,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2391,
											"end": 2571,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2391,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2439,
											"end": 2516,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2436,
											"end": 2437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 2540,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2533,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2526,
											"end": 2541,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2560,
											"end": 2564,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2557,
											"end": 2558,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2565,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2700,
											"end": 2817,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2700,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2810,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2807,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2811,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2823,
											"end": 2939,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2823,
											"end": 2939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2908,
											"end": 2913,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2893,
											"end": 2914,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2893,
											"end": 2914,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2893,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2891,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2883,
											"end": 2915,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2873,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2873,
											"end": 2933,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2929,
											"end": 2930,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2931,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2873,
											"end": 2933,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2873,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2823,
											"end": 2939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2823,
											"end": 2939,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"axsToken()": "180dc0ac",
							"endTime()": "3197cbb6",
							"now()": "8abe09f2",
							"receiveUSDT()": "55cf0a69",
							"startTime()": "78e97925"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timeRuns\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"axsToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"now\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiveUSDT\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TokenSell.sol\":\"Tokensell\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"TokenSell.sol\":{\"keccak256\":\"0x4d0c06b374a4622d6e6daa0990b18d9346ecb8d4ccf2a5e37e0a2c1126700193\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://db371892197d561f38b188ab98a6220abf3b9094e2e69a80f433f47006efc489\",\"dweb:/ipfs/QmWiYSanzWtq1BHqNHsFYKm2bVsSkpeW2nd8rCSdGKkRSN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 82,
								"contract": "TokenSell.sol:Tokensell",
								"label": "startTime",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 84,
								"contract": "TokenSell.sol:Tokensell",
								"label": "endTime",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 90,
								"contract": "TokenSell.sol:Tokensell",
								"label": "now",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 93,
								"contract": "TokenSell.sol:Tokensell",
								"label": "axsToken",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2319",
				"formattedMessage": "Warning: This declaration shadows a builtin symbol.\n --> TokenSell.sol:9:5:\n  |\n9 |     uint public now = block.timestamp * 1 minutes;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "This declaration shadows a builtin symbol.",
				"severity": "warning",
				"sourceLocation": {
					"end": 249,
					"file": "TokenSell.sol",
					"start": 204
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> TokenSell.sol:13:5:\n   |\n13 |     constructor(uint timeRuns) public{\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 503,
					"file": "TokenSell.sol",
					"start": 339
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"TokenSell.sol": {
				"ast": {
					"absolutePath": "TokenSell.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"Tokensell": [
							154
						]
					},
					"id": 155,
					"license": "Unlicense",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 155,
							"sourceUnit": 78,
							"src": "65:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 154,
							"linearizedBaseContracts": [
								154
							],
							"name": "Tokensell",
							"nameLocation": "134:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "78e97925",
									"id": 82,
									"mutability": "mutable",
									"name": "startTime",
									"nameLocation": "162:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "150:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 81,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "150:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3197cbb6",
									"id": 84,
									"mutability": "mutable",
									"name": "endTime",
									"nameLocation": "190:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "178:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 83,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "178:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8abe09f2",
									"id": 90,
									"mutability": "mutable",
									"name": "now",
									"nameLocation": "216:3:1",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "204:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 85,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "204:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 89,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"id": 86,
												"name": "block",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967292,
												"src": "222:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_block",
													"typeString": "block"
												}
											},
											"id": 87,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "timestamp",
											"nodeType": "MemberAccess",
											"src": "222:15:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31",
											"id": 88,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "240:9:1",
											"subdenomination": "minutes",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_60_by_1",
												"typeString": "int_const 60"
											},
											"value": "1"
										},
										"src": "222:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "180dc0ac",
									"id": 93,
									"mutability": "mutable",
									"name": "axsToken",
									"nameLocation": "277:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "262:68:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 91,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "262:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830616137373236626330634230383541334334666245334230396239314444374532376637666561",
										"id": 92,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "288:42:1",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x0aa7726bc0cB085A3C4fbE3B09b91DD7E27f7fea"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "372:131:1",
										"statements": [
											{
												"expression": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 98,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "383:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 99,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "395:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "395:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 101,
																"name": "timeRuns",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "413:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31",
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "424:9:1",
																"subdenomination": "minutes",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "1"
															},
															"src": "413:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "395:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "383:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "383:50:1"
											},
											{
												"expression": {
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 107,
														"name": "endTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "445:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 108,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "455:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "455:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 110,
																"name": "timeRuns",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "473:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31",
																"id": 111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "484:9:1",
																"subdenomination": "minutes",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "1"
															},
															"src": "473:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "455:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "445:48:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "445:48:1"
											}
										]
									},
									"id": 117,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "timeRuns",
												"nameLocation": "356:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "351:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "351:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "350:15:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "372:0:1"
									},
									"scope": 154,
									"src": "339:164:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "550:190:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 121,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "569:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 122,
																"name": "endTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 84,
																"src": "581:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "569:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 120,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "561:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "561:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "561:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 127,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "608:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "608:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 129,
																"name": "endTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 84,
																"src": "626:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "608:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 126,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "600:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "600:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "600:34:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 134,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "653:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "653:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "665:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "653:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "645:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "645:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "645:22:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 144,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "704:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "704:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 146,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "716:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "716:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "313030",
																"id": 148,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "728:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "716:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 141,
																	"name": "axsToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "685:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 140,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "678:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:16:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "678:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "678:54:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "678:54:1"
											}
										]
									},
									"functionSelector": "55cf0a69",
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "receiveUSDT",
									"nameLocation": "522:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "533:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "550:0:1"
									},
									"scope": 154,
									"src": "513:227:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 155,
							"src": "125:618:1",
							"usedErrors": []
						}
					],
					"src": "38:705:1"
				},
				"id": 1
			}
		}
	}
}