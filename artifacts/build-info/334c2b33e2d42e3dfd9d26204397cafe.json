{
	"id": "334c2b33e2d42e3dfd9d26204397cafe",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"TokenSell.sol": {
				"content": "//SPDX-License-Identifier: Unlicense\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract Tokensell{\r\n        uint256 public price = 1 * 10 * 18;\r\n        uint256 userbalance = 0;\r\n        uint starttime;\r\n        uint endtime;\r\n        address public axsToken = 0x0aa7726bc0cB085A3C4fbE3B09b91DD7E27f7fea;\r\n        mapping(address => uint) public _balance;\r\n\r\n    function launch(uint _starttime , uint _endtime)external view{\r\n        require(_starttime >= block.timestamp);\r\n        require(_endtime >= _starttime);\r\n        require(_endtime <= block.timestamp + 30 days);\r\n        \r\n    }\r\n    function sale(uint256 buynmu)public{\r\n        require(block.timestamp >= starttime);\r\n        require(block.timestamp <= endtime);\r\n        uint256 paynum = buynmu * price / 10 ** 18;\r\n        IERC20(axsToken).transferFrom(msg.sender , address(this),paynum);\r\n\r\n        \r\n    }\r\n    \r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TokenSell.sol": {
				"Tokensell": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "axsToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_starttime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_endtime",
									"type": "uint256"
								}
							],
							"name": "launch",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "buynmu",
									"type": "uint256"
								}
							],
							"name": "sale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TokenSell.sol\":125:928  contract Tokensell{\r... */\n  mstore(0x40, 0x80)\n    /* \"TokenSell.sol\":177:188  1 * 10 * 18 */\n  0xb4\n    /* \"TokenSell.sol\":154:188  uint256 public price = 1 * 10 * 18 */\n  0x00\n  sstore\n    /* \"TokenSell.sol\":221:222  0 */\n  0x00\n    /* \"TokenSell.sol\":199:222  uint256 userbalance = 0 */\n  0x01\n  sstore\n    /* \"TokenSell.sol\":307:349  0x0aa7726bc0cB085A3C4fbE3B09b91DD7E27f7fea */\n  0x0aa7726bc0cb085a3c4fbe3b09b91dd7e27f7fea\n    /* \"TokenSell.sol\":281:349  address public axsToken = 0x0aa7726bc0cB085A3C4fbE3B09b91DD7E27f7fea */\n  0x04\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"TokenSell.sol\":125:928  contract Tokensell{\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"TokenSell.sol\":125:928  contract Tokensell{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x180dc0ac\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x82760cd2\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x96032702\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa035b1fe\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xd3aceae2\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"TokenSell.sol\":281:349  address public axsToken = 0x0aa7726bc0cB085A3C4fbE3B09b91DD7E27f7fea */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenSell.sol\":409:636  function launch(uint _starttime , uint _endtime)external view{\r... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"TokenSell.sol\":642:919  function sale(uint256 buynmu)public{\r... */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"TokenSell.sol\":154:188  uint256 public price = 1 * 10 * 18 */\n    tag_6:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenSell.sol\":360:400  mapping(address => uint) public _balance */\n    tag_7:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenSell.sol\":281:349  address public axsToken = 0x0aa7726bc0cB085A3C4fbE3B09b91DD7E27f7fea */\n    tag_9:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"TokenSell.sol\":409:636  function launch(uint _starttime , uint _endtime)external view{\r... */\n    tag_15:\n        /* \"TokenSell.sol\":503:518  block.timestamp */\n      timestamp\n        /* \"TokenSell.sol\":489:499  _starttime */\n      dup3\n        /* \"TokenSell.sol\":489:518  _starttime >= block.timestamp */\n      lt\n      iszero\n        /* \"TokenSell.sol\":481:519  require(_starttime >= block.timestamp) */\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n        /* \"TokenSell.sol\":550:560  _starttime */\n      dup2\n        /* \"TokenSell.sol\":538:546  _endtime */\n      dup2\n        /* \"TokenSell.sol\":538:560  _endtime >= _starttime */\n      lt\n      iszero\n        /* \"TokenSell.sol\":530:561  require(_endtime >= _starttime) */\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n        /* \"TokenSell.sol\":610:617  30 days */\n      0x278d00\n        /* \"TokenSell.sol\":592:607  block.timestamp */\n      timestamp\n        /* \"TokenSell.sol\":592:617  block.timestamp + 30 days */\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"TokenSell.sol\":580:588  _endtime */\n      dup2\n        /* \"TokenSell.sol\":580:617  _endtime <= block.timestamp + 30 days */\n      gt\n      iszero\n        /* \"TokenSell.sol\":572:618  require(_endtime <= block.timestamp + 30 days) */\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n        /* \"TokenSell.sol\":409:636  function launch(uint _starttime , uint _endtime)external view{\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"TokenSell.sol\":642:919  function sale(uint256 buynmu)public{\r... */\n    tag_19:\n        /* \"TokenSell.sol\":715:724  starttime */\n      sload(0x02)\n        /* \"TokenSell.sol\":696:711  block.timestamp */\n      timestamp\n        /* \"TokenSell.sol\":696:724  block.timestamp >= starttime */\n      lt\n      iszero\n        /* \"TokenSell.sol\":688:725  require(block.timestamp >= starttime) */\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n        /* \"TokenSell.sol\":763:770  endtime */\n      sload(0x03)\n        /* \"TokenSell.sol\":744:759  block.timestamp */\n      timestamp\n        /* \"TokenSell.sol\":744:770  block.timestamp <= endtime */\n      gt\n      iszero\n        /* \"TokenSell.sol\":736:771  require(block.timestamp <= endtime) */\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n        /* \"TokenSell.sol\":782:796  uint256 paynum */\n      0x00\n        /* \"TokenSell.sol\":816:824  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"TokenSell.sol\":808:813  price */\n      sload(0x00)\n        /* \"TokenSell.sol\":799:805  buynmu */\n      dup4\n        /* \"TokenSell.sol\":799:813  buynmu * price */\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"TokenSell.sol\":799:824  buynmu * price / 10 ** 18 */\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n        /* \"TokenSell.sol\":782:824  uint256 paynum = buynmu * price / 10 ** 18 */\n      swap1\n      pop\n        /* \"TokenSell.sol\":842:850  axsToken */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TokenSell.sol\":835:864  IERC20(axsToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"TokenSell.sol\":865:875  msg.sender */\n      caller\n        /* \"TokenSell.sol\":886:890  this */\n      address\n        /* \"TokenSell.sol\":892:898  paynum */\n      dup5\n        /* \"TokenSell.sol\":835:899  IERC20(axsToken).transferFrom(msg.sender , address(this),paynum) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_42\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_46\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_46:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      pop\n        /* \"TokenSell.sol\":677:919  {\r... */\n      pop\n        /* \"TokenSell.sol\":642:919  function sale(uint256 buynmu)public{\r... */\n      pop\n      jump\t// out\n        /* \"TokenSell.sol\":154:188  uint256 public price = 1 * 10 * 18 */\n    tag_21:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"TokenSell.sol\":360:400  mapping(address => uint) public _balance */\n    tag_27:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_50:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_52\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_54:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_56\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_58:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_60\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:769   */\n    tag_26:\n        /* \"#utility.yul\":499:505   */\n      0x00\n        /* \"#utility.yul\":548:550   */\n      0x20\n        /* \"#utility.yul\":536:545   */\n      dup3\n        /* \"#utility.yul\":527:534   */\n      dup5\n        /* \"#utility.yul\":523:546   */\n      sub\n        /* \"#utility.yul\":519:551   */\n      slt\n        /* \"#utility.yul\":516:635   */\n      iszero\n      tag_63\n      jumpi\n        /* \"#utility.yul\":554:633   */\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":516:635   */\n    tag_63:\n        /* \"#utility.yul\":674:675   */\n      0x00\n        /* \"#utility.yul\":699:752   */\n      tag_66\n        /* \"#utility.yul\":744:751   */\n      dup5\n        /* \"#utility.yul\":735:741   */\n      dup3\n        /* \"#utility.yul\":724:733   */\n      dup6\n        /* \"#utility.yul\":720:742   */\n      add\n        /* \"#utility.yul\":699:752   */\n      tag_50\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":689:752   */\n      swap2\n      pop\n        /* \"#utility.yul\":645:762   */\n      pop\n        /* \"#utility.yul\":440:769   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":775:1120   */\n    tag_48:\n        /* \"#utility.yul\":842:848   */\n      0x00\n        /* \"#utility.yul\":891:893   */\n      0x20\n        /* \"#utility.yul\":879:888   */\n      dup3\n        /* \"#utility.yul\":870:877   */\n      dup5\n        /* \"#utility.yul\":866:889   */\n      sub\n        /* \"#utility.yul\":862:894   */\n      slt\n        /* \"#utility.yul\":859:978   */\n      iszero\n      tag_68\n      jumpi\n        /* \"#utility.yul\":897:976   */\n      tag_69\n      tag_65\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":859:978   */\n    tag_68:\n        /* \"#utility.yul\":1017:1018   */\n      0x00\n        /* \"#utility.yul\":1042:1103   */\n      tag_70\n        /* \"#utility.yul\":1095:1102   */\n      dup5\n        /* \"#utility.yul\":1086:1092   */\n      dup3\n        /* \"#utility.yul\":1075:1084   */\n      dup6\n        /* \"#utility.yul\":1071:1093   */\n      add\n        /* \"#utility.yul\":1042:1103   */\n      tag_54\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1032:1103   */\n      swap2\n      pop\n        /* \"#utility.yul\":988:1113   */\n      pop\n        /* \"#utility.yul\":775:1120   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1126:1455   */\n    tag_18:\n        /* \"#utility.yul\":1185:1191   */\n      0x00\n        /* \"#utility.yul\":1234:1236   */\n      0x20\n        /* \"#utility.yul\":1222:1231   */\n      dup3\n        /* \"#utility.yul\":1213:1220   */\n      dup5\n        /* \"#utility.yul\":1209:1232   */\n      sub\n        /* \"#utility.yul\":1205:1237   */\n      slt\n        /* \"#utility.yul\":1202:1321   */\n      iszero\n      tag_72\n      jumpi\n        /* \"#utility.yul\":1240:1319   */\n      tag_73\n      tag_65\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1202:1321   */\n    tag_72:\n        /* \"#utility.yul\":1360:1361   */\n      0x00\n        /* \"#utility.yul\":1385:1438   */\n      tag_74\n        /* \"#utility.yul\":1430:1437   */\n      dup5\n        /* \"#utility.yul\":1421:1427   */\n      dup3\n        /* \"#utility.yul\":1410:1419   */\n      dup6\n        /* \"#utility.yul\":1406:1428   */\n      add\n        /* \"#utility.yul\":1385:1438   */\n      tag_58\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1375:1438   */\n      swap2\n      pop\n        /* \"#utility.yul\":1331:1448   */\n      pop\n        /* \"#utility.yul\":1126:1455   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1461:1935   */\n    tag_14:\n        /* \"#utility.yul\":1529:1535   */\n      0x00\n        /* \"#utility.yul\":1537:1543   */\n      dup1\n        /* \"#utility.yul\":1586:1588   */\n      0x40\n        /* \"#utility.yul\":1574:1583   */\n      dup4\n        /* \"#utility.yul\":1565:1572   */\n      dup6\n        /* \"#utility.yul\":1561:1584   */\n      sub\n        /* \"#utility.yul\":1557:1589   */\n      slt\n        /* \"#utility.yul\":1554:1673   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":1592:1671   */\n      tag_77\n      tag_65\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":1554:1673   */\n    tag_76:\n        /* \"#utility.yul\":1712:1713   */\n      0x00\n        /* \"#utility.yul\":1737:1790   */\n      tag_78\n        /* \"#utility.yul\":1782:1789   */\n      dup6\n        /* \"#utility.yul\":1773:1779   */\n      dup3\n        /* \"#utility.yul\":1762:1771   */\n      dup7\n        /* \"#utility.yul\":1758:1780   */\n      add\n        /* \"#utility.yul\":1737:1790   */\n      tag_58\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1727:1790   */\n      swap3\n      pop\n        /* \"#utility.yul\":1683:1800   */\n      pop\n        /* \"#utility.yul\":1839:1841   */\n      0x20\n        /* \"#utility.yul\":1865:1918   */\n      tag_79\n        /* \"#utility.yul\":1910:1917   */\n      dup6\n        /* \"#utility.yul\":1901:1907   */\n      dup3\n        /* \"#utility.yul\":1890:1899   */\n      dup7\n        /* \"#utility.yul\":1886:1908   */\n      add\n        /* \"#utility.yul\":1865:1918   */\n      tag_58\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":1855:1918   */\n      swap2\n      pop\n        /* \"#utility.yul\":1810:1928   */\n      pop\n        /* \"#utility.yul\":1461:1935   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1941:2059   */\n    tag_80:\n        /* \"#utility.yul\":2028:2052   */\n      tag_82\n        /* \"#utility.yul\":2046:2051   */\n      dup2\n        /* \"#utility.yul\":2028:2052   */\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2023:2026   */\n      dup3\n        /* \"#utility.yul\":2016:2053   */\n      mstore\n        /* \"#utility.yul\":1941:2059   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2065:2183   */\n    tag_84:\n        /* \"#utility.yul\":2152:2176   */\n      tag_86\n        /* \"#utility.yul\":2170:2175   */\n      dup2\n        /* \"#utility.yul\":2152:2176   */\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":2147:2150   */\n      dup3\n        /* \"#utility.yul\":2140:2177   */\n      mstore\n        /* \"#utility.yul\":2065:2183   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2189:2411   */\n    tag_11:\n        /* \"#utility.yul\":2282:2286   */\n      0x00\n        /* \"#utility.yul\":2320:2322   */\n      0x20\n        /* \"#utility.yul\":2309:2318   */\n      dup3\n        /* \"#utility.yul\":2305:2323   */\n      add\n        /* \"#utility.yul\":2297:2323   */\n      swap1\n      pop\n        /* \"#utility.yul\":2333:2404   */\n      tag_89\n        /* \"#utility.yul\":2401:2402   */\n      0x00\n        /* \"#utility.yul\":2390:2399   */\n      dup4\n        /* \"#utility.yul\":2386:2403   */\n      add\n        /* \"#utility.yul\":2377:2383   */\n      dup5\n        /* \"#utility.yul\":2333:2404   */\n      tag_80\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":2189:2411   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2417:2859   */\n    tag_43:\n        /* \"#utility.yul\":2566:2570   */\n      0x00\n        /* \"#utility.yul\":2604:2606   */\n      0x60\n        /* \"#utility.yul\":2593:2602   */\n      dup3\n        /* \"#utility.yul\":2589:2607   */\n      add\n        /* \"#utility.yul\":2581:2607   */\n      swap1\n      pop\n        /* \"#utility.yul\":2617:2688   */\n      tag_91\n        /* \"#utility.yul\":2685:2686   */\n      0x00\n        /* \"#utility.yul\":2674:2683   */\n      dup4\n        /* \"#utility.yul\":2670:2687   */\n      add\n        /* \"#utility.yul\":2661:2667   */\n      dup7\n        /* \"#utility.yul\":2617:2688   */\n      tag_80\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":2698:2770   */\n      tag_92\n        /* \"#utility.yul\":2766:2768   */\n      0x20\n        /* \"#utility.yul\":2755:2764   */\n      dup4\n        /* \"#utility.yul\":2751:2769   */\n      add\n        /* \"#utility.yul\":2742:2748   */\n      dup6\n        /* \"#utility.yul\":2698:2770   */\n      tag_80\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":2780:2852   */\n      tag_93\n        /* \"#utility.yul\":2848:2850   */\n      0x40\n        /* \"#utility.yul\":2837:2846   */\n      dup4\n        /* \"#utility.yul\":2833:2851   */\n      add\n        /* \"#utility.yul\":2824:2830   */\n      dup5\n        /* \"#utility.yul\":2780:2852   */\n      tag_84\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":2417:2859   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2865:3087   */\n    tag_23:\n        /* \"#utility.yul\":2958:2962   */\n      0x00\n        /* \"#utility.yul\":2996:2998   */\n      0x20\n        /* \"#utility.yul\":2985:2994   */\n      dup3\n        /* \"#utility.yul\":2981:2999   */\n      add\n        /* \"#utility.yul\":2973:2999   */\n      swap1\n      pop\n        /* \"#utility.yul\":3009:3080   */\n      tag_95\n        /* \"#utility.yul\":3077:3078   */\n      0x00\n        /* \"#utility.yul\":3066:3075   */\n      dup4\n        /* \"#utility.yul\":3062:3079   */\n      add\n        /* \"#utility.yul\":3053:3059   */\n      dup5\n        /* \"#utility.yul\":3009:3080   */\n      tag_84\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":2865:3087   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3174:3479   */\n    tag_33:\n        /* \"#utility.yul\":3214:3217   */\n      0x00\n        /* \"#utility.yul\":3233:3253   */\n      tag_99\n        /* \"#utility.yul\":3251:3252   */\n      dup3\n        /* \"#utility.yul\":3233:3253   */\n      tag_87\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":3228:3253   */\n      swap2\n      pop\n        /* \"#utility.yul\":3267:3287   */\n      tag_100\n        /* \"#utility.yul\":3285:3286   */\n      dup4\n        /* \"#utility.yul\":3267:3287   */\n      tag_87\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":3262:3287   */\n      swap3\n      pop\n        /* \"#utility.yul\":3421:3422   */\n      dup3\n        /* \"#utility.yul\":3353:3419   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3349:3423   */\n      sub\n        /* \"#utility.yul\":3346:3347   */\n      dup3\n        /* \"#utility.yul\":3343:3424   */\n      gt\n        /* \"#utility.yul\":3340:3447   */\n      iszero\n      tag_101\n      jumpi\n        /* \"#utility.yul\":3427:3445   */\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":3340:3447   */\n    tag_101:\n        /* \"#utility.yul\":3471:3472   */\n      dup3\n        /* \"#utility.yul\":3468:3469   */\n      dup3\n        /* \"#utility.yul\":3464:3473   */\n      add\n        /* \"#utility.yul\":3457:3473   */\n      swap1\n      pop\n        /* \"#utility.yul\":3174:3479   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3485:3670   */\n    tag_41:\n        /* \"#utility.yul\":3525:3526   */\n      0x00\n        /* \"#utility.yul\":3542:3562   */\n      tag_105\n        /* \"#utility.yul\":3560:3561   */\n      dup3\n        /* \"#utility.yul\":3542:3562   */\n      tag_87\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":3537:3562   */\n      swap2\n      pop\n        /* \"#utility.yul\":3576:3596   */\n      tag_106\n        /* \"#utility.yul\":3594:3595   */\n      dup4\n        /* \"#utility.yul\":3576:3596   */\n      tag_87\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":3571:3596   */\n      swap3\n      pop\n        /* \"#utility.yul\":3615:3616   */\n      dup3\n        /* \"#utility.yul\":3605:3640   */\n      tag_107\n      jumpi\n        /* \"#utility.yul\":3620:3638   */\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":3605:3640   */\n    tag_107:\n        /* \"#utility.yul\":3662:3663   */\n      dup3\n        /* \"#utility.yul\":3659:3660   */\n      dup3\n        /* \"#utility.yul\":3655:3664   */\n      div\n        /* \"#utility.yul\":3650:3664   */\n      swap1\n      pop\n        /* \"#utility.yul\":3485:3670   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3676:4024   */\n    tag_39:\n        /* \"#utility.yul\":3716:3723   */\n      0x00\n        /* \"#utility.yul\":3739:3759   */\n      tag_111\n        /* \"#utility.yul\":3757:3758   */\n      dup3\n        /* \"#utility.yul\":3739:3759   */\n      tag_87\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":3734:3759   */\n      swap2\n      pop\n        /* \"#utility.yul\":3773:3793   */\n      tag_112\n        /* \"#utility.yul\":3791:3792   */\n      dup4\n        /* \"#utility.yul\":3773:3793   */\n      tag_87\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":3768:3793   */\n      swap3\n      pop\n        /* \"#utility.yul\":3961:3962   */\n      dup2\n        /* \"#utility.yul\":3893:3959   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3889:3963   */\n      div\n        /* \"#utility.yul\":3886:3887   */\n      dup4\n        /* \"#utility.yul\":3883:3964   */\n      gt\n        /* \"#utility.yul\":3878:3879   */\n      dup3\n        /* \"#utility.yul\":3871:3880   */\n      iszero\n        /* \"#utility.yul\":3864:3881   */\n      iszero\n        /* \"#utility.yul\":3860:3965   */\n      and\n        /* \"#utility.yul\":3857:3988   */\n      iszero\n      tag_113\n      jumpi\n        /* \"#utility.yul\":3968:3986   */\n      tag_114\n      tag_103\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":3857:3988   */\n    tag_113:\n        /* \"#utility.yul\":4016:4017   */\n      dup3\n        /* \"#utility.yul\":4013:4014   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      mul\n        /* \"#utility.yul\":3998:4018   */\n      swap1\n      pop\n        /* \"#utility.yul\":3676:4024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4126   */\n    tag_83:\n        /* \"#utility.yul\":4067:4074   */\n      0x00\n        /* \"#utility.yul\":4096:4120   */\n      tag_116\n        /* \"#utility.yul\":4114:4119   */\n      dup3\n        /* \"#utility.yul\":4096:4120   */\n      tag_117\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":4085:4120   */\n      swap1\n      pop\n        /* \"#utility.yul\":4030:4126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4132:4222   */\n    tag_118:\n        /* \"#utility.yul\":4166:4173   */\n      0x00\n        /* \"#utility.yul\":4209:4214   */\n      dup2\n        /* \"#utility.yul\":4202:4215   */\n      iszero\n        /* \"#utility.yul\":4195:4216   */\n      iszero\n        /* \"#utility.yul\":4184:4216   */\n      swap1\n      pop\n        /* \"#utility.yul\":4132:4222   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4228:4354   */\n    tag_117:\n        /* \"#utility.yul\":4265:4272   */\n      0x00\n        /* \"#utility.yul\":4305:4347   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4298:4303   */\n      dup3\n        /* \"#utility.yul\":4294:4348   */\n      and\n        /* \"#utility.yul\":4283:4348   */\n      swap1\n      pop\n        /* \"#utility.yul\":4228:4354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4360:4437   */\n    tag_87:\n        /* \"#utility.yul\":4397:4404   */\n      0x00\n        /* \"#utility.yul\":4426:4431   */\n      dup2\n        /* \"#utility.yul\":4415:4431   */\n      swap1\n      pop\n        /* \"#utility.yul\":4360:4437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4443:4623   */\n    tag_103:\n        /* \"#utility.yul\":4491:4568   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4488:4489   */\n      0x00\n        /* \"#utility.yul\":4481:4569   */\n      mstore\n        /* \"#utility.yul\":4588:4592   */\n      0x11\n        /* \"#utility.yul\":4585:4586   */\n      0x04\n        /* \"#utility.yul\":4578:4593   */\n      mstore\n        /* \"#utility.yul\":4612:4616   */\n      0x24\n        /* \"#utility.yul\":4609:4610   */\n      0x00\n        /* \"#utility.yul\":4602:4617   */\n      revert\n        /* \"#utility.yul\":4629:4809   */\n    tag_109:\n        /* \"#utility.yul\":4677:4754   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4674:4675   */\n      0x00\n        /* \"#utility.yul\":4667:4755   */\n      mstore\n        /* \"#utility.yul\":4774:4778   */\n      0x12\n        /* \"#utility.yul\":4771:4772   */\n      0x04\n        /* \"#utility.yul\":4764:4779   */\n      mstore\n        /* \"#utility.yul\":4798:4802   */\n      0x24\n        /* \"#utility.yul\":4795:4796   */\n      0x00\n        /* \"#utility.yul\":4788:4803   */\n      revert\n        /* \"#utility.yul\":4938:5055   */\n    tag_65:\n        /* \"#utility.yul\":5047:5048   */\n      0x00\n        /* \"#utility.yul\":5044:5045   */\n      dup1\n        /* \"#utility.yul\":5037:5049   */\n      revert\n        /* \"#utility.yul\":5061:5183   */\n    tag_53:\n        /* \"#utility.yul\":5134:5158   */\n      tag_128\n        /* \"#utility.yul\":5152:5157   */\n      dup2\n        /* \"#utility.yul\":5134:5158   */\n      tag_83\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":5127:5132   */\n      dup2\n        /* \"#utility.yul\":5124:5159   */\n      eq\n        /* \"#utility.yul\":5114:5177   */\n      tag_129\n      jumpi\n        /* \"#utility.yul\":5173:5174   */\n      0x00\n        /* \"#utility.yul\":5170:5171   */\n      dup1\n        /* \"#utility.yul\":5163:5175   */\n      revert\n        /* \"#utility.yul\":5114:5177   */\n    tag_129:\n        /* \"#utility.yul\":5061:5183   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5189:5305   */\n    tag_57:\n        /* \"#utility.yul\":5259:5280   */\n      tag_131\n        /* \"#utility.yul\":5274:5279   */\n      dup2\n        /* \"#utility.yul\":5259:5280   */\n      tag_118\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":5252:5257   */\n      dup2\n        /* \"#utility.yul\":5249:5281   */\n      eq\n        /* \"#utility.yul\":5239:5299   */\n      tag_132\n      jumpi\n        /* \"#utility.yul\":5295:5296   */\n      0x00\n        /* \"#utility.yul\":5292:5293   */\n      dup1\n        /* \"#utility.yul\":5285:5297   */\n      revert\n        /* \"#utility.yul\":5239:5299   */\n    tag_132:\n        /* \"#utility.yul\":5189:5305   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5311:5433   */\n    tag_61:\n        /* \"#utility.yul\":5384:5408   */\n      tag_134\n        /* \"#utility.yul\":5402:5407   */\n      dup2\n        /* \"#utility.yul\":5384:5408   */\n      tag_87\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":5377:5382   */\n      dup2\n        /* \"#utility.yul\":5374:5409   */\n      eq\n        /* \"#utility.yul\":5364:5427   */\n      tag_135\n      jumpi\n        /* \"#utility.yul\":5423:5424   */\n      0x00\n        /* \"#utility.yul\":5420:5421   */\n      dup1\n        /* \"#utility.yul\":5413:5425   */\n      revert\n        /* \"#utility.yul\":5364:5427   */\n    tag_135:\n        /* \"#utility.yul\":5311:5433   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220dcab55d47d5fbf7e957579a57fe72a5336c1fe4ce64052df334a34135caada7264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260b46000556000600155730aa7726bc0cb085a3c4fbe3b09b91dd7e27f7fea600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006f57600080fd5b5061060e8061007f6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063180dc0ac1461005c57806382760cd21461007a5780639603270214610096578063a035b1fe146100b2578063d3aceae2146100d0575b600080fd5b610064610100565b604051610071919061039a565b60405180910390f35b610094600480360381019061008f919061033c565b610126565b005b6100b060048036038101906100ab919061030f565b61015f565b005b6100ba610258565b6040516100c791906103ec565b60405180910390f35b6100ea60048036038101906100e591906102b5565b61025e565b6040516100f791906103ec565b60405180910390f35b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b4282101561013357600080fd5b8181101561014057600080fd5b62278d004261014f9190610407565b81111561015b57600080fd5b5050565b60025442101561016e57600080fd5b60035442111561017d57600080fd5b6000670de0b6b3a764000060005483610196919061048e565b6101a0919061045d565b9050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610201939291906103b5565b602060405180830381600087803b15801561021b57600080fd5b505af115801561022f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025391906102e2565b505050565b60005481565b60056020528060005260406000206000915090505481565b60008135905061028581610593565b92915050565b60008151905061029a816105aa565b92915050565b6000813590506102af816105c1565b92915050565b6000602082840312156102cb576102ca61058e565b5b60006102d984828501610276565b91505092915050565b6000602082840312156102f8576102f761058e565b5b60006103068482850161028b565b91505092915050565b6000602082840312156103255761032461058e565b5b6000610333848285016102a0565b91505092915050565b600080604083850312156103535761035261058e565b5b6000610361858286016102a0565b9250506020610372858286016102a0565b9150509250929050565b610385816104e8565b82525050565b61039481610526565b82525050565b60006020820190506103af600083018461037c565b92915050565b60006060820190506103ca600083018661037c565b6103d7602083018561037c565b6103e4604083018461038b565b949350505050565b6000602082019050610401600083018461038b565b92915050565b600061041282610526565b915061041d83610526565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561045257610451610530565b5b828201905092915050565b600061046882610526565b915061047383610526565b9250826104835761048261055f565b5b828204905092915050565b600061049982610526565b91506104a483610526565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156104dd576104dc610530565b5b828202905092915050565b60006104f382610506565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b61059c816104e8565b81146105a757600080fd5b50565b6105b3816104fa565b81146105be57600080fd5b50565b6105ca81610526565b81146105d557600080fd5b5056fea2646970667358221220dcab55d47d5fbf7e957579a57fe72a5336c1fe4ce64052df334a34135caada7264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xB4 PUSH1 0x0 SSTORE PUSH1 0x0 PUSH1 0x1 SSTORE PUSH20 0xAA7726BC0CB085A3C4FBE3B09B91DD7E27F7FEA PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60E DUP1 PUSH2 0x7F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x180DC0AC EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x82760CD2 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x96032702 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xD3ACEAE2 EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x100 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x33C JUMP JUMPDEST PUSH2 0x126 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x30F JUMP JUMPDEST PUSH2 0x15F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBA PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x2B5 JUMP JUMPDEST PUSH2 0x25E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST TIMESTAMP DUP3 LT ISZERO PUSH2 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x278D00 TIMESTAMP PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x407 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP GT ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 SLOAD DUP4 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x48E JUMP JUMPDEST PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x45D JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x201 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x2E2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x285 DUP2 PUSH2 0x593 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x29A DUP2 PUSH2 0x5AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AF DUP2 PUSH2 0x5C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CB JUMPI PUSH2 0x2CA PUSH2 0x58E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D9 DUP5 DUP3 DUP6 ADD PUSH2 0x276 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F8 JUMPI PUSH2 0x2F7 PUSH2 0x58E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x306 DUP5 DUP3 DUP6 ADD PUSH2 0x28B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x325 JUMPI PUSH2 0x324 PUSH2 0x58E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x333 DUP5 DUP3 DUP6 ADD PUSH2 0x2A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x353 JUMPI PUSH2 0x352 PUSH2 0x58E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x361 DUP6 DUP3 DUP7 ADD PUSH2 0x2A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x372 DUP6 DUP3 DUP7 ADD PUSH2 0x2A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x385 DUP2 PUSH2 0x4E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x394 DUP2 PUSH2 0x526 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3AF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x37C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3CA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x37C JUMP JUMPDEST PUSH2 0x3D7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x37C JUMP JUMPDEST PUSH2 0x3E4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x38B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x401 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x38B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x412 DUP3 PUSH2 0x526 JUMP JUMPDEST SWAP2 POP PUSH2 0x41D DUP4 PUSH2 0x526 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x452 JUMPI PUSH2 0x451 PUSH2 0x530 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x468 DUP3 PUSH2 0x526 JUMP JUMPDEST SWAP2 POP PUSH2 0x473 DUP4 PUSH2 0x526 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x483 JUMPI PUSH2 0x482 PUSH2 0x55F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499 DUP3 PUSH2 0x526 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A4 DUP4 PUSH2 0x526 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4DD JUMPI PUSH2 0x4DC PUSH2 0x530 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F3 DUP3 PUSH2 0x506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59C DUP2 PUSH2 0x4E8 JUMP JUMPDEST DUP2 EQ PUSH2 0x5A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5B3 DUP2 PUSH2 0x4FA JUMP JUMPDEST DUP2 EQ PUSH2 0x5BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5CA DUP2 PUSH2 0x526 JUMP JUMPDEST DUP2 EQ PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xAB SSTORE 0xD4 PUSH30 0x5FBF7E957579A57FE72A5336C1FE4CE64052DF334A34135CAADA7264736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "125:803:1:-:0;;;177:11;154:34;;221:1;199:23;;307:42;281:68;;;;;;;;;;;;;;;;;;;;125:803;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_balance_101": {
									"entryPoint": 606,
									"id": 101,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@axsToken_97": {
									"entryPoint": 256,
									"id": 97,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@launch_131": {
									"entryPoint": 294,
									"id": 131,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@price_87": {
									"entryPoint": 600,
									"id": 87,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sale_174": {
									"entryPoint": 351,
									"id": 174,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 949,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1328,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1375,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1422,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5436:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:2",
														"type": ""
													}
												],
												"src": "152:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:2",
														"type": ""
													}
												],
												"src": "295:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "506:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "552:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "554:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "554:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "554:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "527:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "536:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "523:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "523:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "548:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "519:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "519:32:2"
															},
															"nodeType": "YulIf",
															"src": "516:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "645:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "660:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "674:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "664:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "689:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "724:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "735:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "720:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "720:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "744:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "699:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "699:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "689:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "476:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "487:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "499:6:2",
														"type": ""
													}
												],
												"src": "440:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "849:271:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "895:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "897:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "897:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "897:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "870:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "879:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "866:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "891:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "862:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "862:32:2"
															},
															"nodeType": "YulIf",
															"src": "859:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "988:125:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1003:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1017:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1007:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1032:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1075:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1086:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1071:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1071:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1095:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1042:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1042:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1032:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "819:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "830:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "842:6:2",
														"type": ""
													}
												],
												"src": "775:345:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1192:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1238:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1240:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1240:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1240:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1213:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1222:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1209:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1209:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1234:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1205:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1205:32:2"
															},
															"nodeType": "YulIf",
															"src": "1202:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1331:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1346:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1360:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1350:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1375:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1410:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1421:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1406:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1406:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1430:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1385:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1385:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1375:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1162:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1173:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1185:6:2",
														"type": ""
													}
												],
												"src": "1126:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1544:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1590:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1592:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1592:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1592:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1565:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1574:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1561:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1561:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1586:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1557:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1557:32:2"
															},
															"nodeType": "YulIf",
															"src": "1554:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1683:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1698:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1712:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1702:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1727:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1762:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1773:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1758:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1758:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1782:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1737:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1737:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1727:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1810:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1825:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1839:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1829:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1855:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1890:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1901:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1886:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1886:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1910:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1865:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1865:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1855:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1506:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1517:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1529:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1537:6:2",
														"type": ""
													}
												],
												"src": "1461:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2006:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2023:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2046:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2028:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2028:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2016:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2016:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2016:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1994:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2001:3:2",
														"type": ""
													}
												],
												"src": "1941:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2130:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2147:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2170:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2152:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2152:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2140:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2140:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2140:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2118:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2125:3:2",
														"type": ""
													}
												],
												"src": "2065:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2287:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2297:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2309:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2320:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2305:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2305:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2297:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2377:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2390:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2401:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2386:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2386:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2333:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2333:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2333:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2259:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2271:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2282:4:2",
														"type": ""
													}
												],
												"src": "2189:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2571:288:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2581:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2593:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2604:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2589:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2589:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2581:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2661:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2674:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2685:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2670:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2670:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2617:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2617:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2617:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2742:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2755:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2766:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2751:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2751:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2698:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2698:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2698:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2824:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2837:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2848:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2833:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2833:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2780:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2780:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2527:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2539:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2547:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2555:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2566:4:2",
														"type": ""
													}
												],
												"src": "2417:442:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2963:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2973:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2985:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2996:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2981:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2981:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2973:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3053:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3066:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3077:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3062:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3062:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3009:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3009:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3009:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2935:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2947:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2958:4:2",
														"type": ""
													}
												],
												"src": "2865:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3133:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3143:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3159:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3153:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3153:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3143:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3126:6:2",
														"type": ""
													}
												],
												"src": "3093:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3218:261:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3228:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3251:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3233:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3233:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3228:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3262:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3285:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3267:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3267:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3262:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3425:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3427:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3427:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3427:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3346:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3353:66:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3421:1:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3349:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3349:74:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3343:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3343:81:2"
															},
															"nodeType": "YulIf",
															"src": "3340:107:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3457:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3468:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3471:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3464:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3464:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3457:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3205:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3208:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3214:3:2",
														"type": ""
													}
												],
												"src": "3174:305:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3527:143:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3537:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3560:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3542:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3542:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3537:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3571:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3594:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3576:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3576:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3571:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3618:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "3620:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3620:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3620:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3615:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3608:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3608:9:2"
															},
															"nodeType": "YulIf",
															"src": "3605:35:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3650:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3659:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3662:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3655:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3655:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3650:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3516:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3519:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "3525:1:2",
														"type": ""
													}
												],
												"src": "3485:185:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3724:300:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3734:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3757:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3739:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3739:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3734:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3768:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3791:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3773:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3773:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3768:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3966:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3968:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3968:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3968:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3878:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3871:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3871:9:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3864:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3864:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3886:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3893:66:2",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3961:1:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "3889:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3889:74:2"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3883:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3883:81:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3860:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:105:2"
															},
															"nodeType": "YulIf",
															"src": "3857:131:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3998:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4013:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4016:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4009:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4009:9:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "3998:7:2"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3707:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3710:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "3716:7:2",
														"type": ""
													}
												],
												"src": "3676:348:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4075:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4085:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4114:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4096:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4096:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4085:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4057:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4067:7:2",
														"type": ""
													}
												],
												"src": "4030:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4174:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4184:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4209:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4202:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4202:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4195:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4195:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4184:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4156:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4166:7:2",
														"type": ""
													}
												],
												"src": "4132:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4273:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4283:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4298:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4305:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4294:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4294:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4283:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4255:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4265:7:2",
														"type": ""
													}
												],
												"src": "4228:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4405:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4415:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4426:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4415:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4387:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4397:7:2",
														"type": ""
													}
												],
												"src": "4360:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4471:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4488:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4491:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4481:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4481:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4481:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4585:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4588:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4578:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4578:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4578:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4609:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4612:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4602:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4602:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4602:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4443:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4657:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4674:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4677:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4667:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4667:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4667:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4771:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4774:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4764:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4764:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4764:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4795:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4798:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4788:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4788:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4788:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "4629:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4904:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4921:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4924:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4914:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4914:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4914:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "4815:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5027:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5044:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5047:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5037:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5037:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5037:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "4938:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5104:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5161:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5170:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5173:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5163:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5163:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5163:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5127:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5152:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5134:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5134:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5124:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5124:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5117:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5117:43:2"
															},
															"nodeType": "YulIf",
															"src": "5114:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5097:5:2",
														"type": ""
													}
												],
												"src": "5061:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5229:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5283:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5292:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5295:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5285:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5285:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5285:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5252:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5274:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "5259:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5259:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5249:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5249:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5242:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5242:40:2"
															},
															"nodeType": "YulIf",
															"src": "5239:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5222:5:2",
														"type": ""
													}
												],
												"src": "5189:116:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5354:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5411:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5420:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5423:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5413:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5413:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5413:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5377:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5402:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5384:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5384:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5374:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5374:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5367:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5367:43:2"
															},
															"nodeType": "YulIf",
															"src": "5364:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5347:5:2",
														"type": ""
													}
												],
												"src": "5311:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c8063180dc0ac1461005c57806382760cd21461007a5780639603270214610096578063a035b1fe146100b2578063d3aceae2146100d0575b600080fd5b610064610100565b604051610071919061039a565b60405180910390f35b610094600480360381019061008f919061033c565b610126565b005b6100b060048036038101906100ab919061030f565b61015f565b005b6100ba610258565b6040516100c791906103ec565b60405180910390f35b6100ea60048036038101906100e591906102b5565b61025e565b6040516100f791906103ec565b60405180910390f35b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b4282101561013357600080fd5b8181101561014057600080fd5b62278d004261014f9190610407565b81111561015b57600080fd5b5050565b60025442101561016e57600080fd5b60035442111561017d57600080fd5b6000670de0b6b3a764000060005483610196919061048e565b6101a0919061045d565b9050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610201939291906103b5565b602060405180830381600087803b15801561021b57600080fd5b505af115801561022f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025391906102e2565b505050565b60005481565b60056020528060005260406000206000915090505481565b60008135905061028581610593565b92915050565b60008151905061029a816105aa565b92915050565b6000813590506102af816105c1565b92915050565b6000602082840312156102cb576102ca61058e565b5b60006102d984828501610276565b91505092915050565b6000602082840312156102f8576102f761058e565b5b60006103068482850161028b565b91505092915050565b6000602082840312156103255761032461058e565b5b6000610333848285016102a0565b91505092915050565b600080604083850312156103535761035261058e565b5b6000610361858286016102a0565b9250506020610372858286016102a0565b9150509250929050565b610385816104e8565b82525050565b61039481610526565b82525050565b60006020820190506103af600083018461037c565b92915050565b60006060820190506103ca600083018661037c565b6103d7602083018561037c565b6103e4604083018461038b565b949350505050565b6000602082019050610401600083018461038b565b92915050565b600061041282610526565b915061041d83610526565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561045257610451610530565b5b828201905092915050565b600061046882610526565b915061047383610526565b9250826104835761048261055f565b5b828204905092915050565b600061049982610526565b91506104a483610526565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156104dd576104dc610530565b5b828202905092915050565b60006104f382610506565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b61059c816104e8565b81146105a757600080fd5b50565b6105b3816104fa565b81146105be57600080fd5b50565b6105ca81610526565b81146105d557600080fd5b5056fea2646970667358221220dcab55d47d5fbf7e957579a57fe72a5336c1fe4ce64052df334a34135caada7264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x180DC0AC EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x82760CD2 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x96032702 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xD3ACEAE2 EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x100 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x33C JUMP JUMPDEST PUSH2 0x126 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x30F JUMP JUMPDEST PUSH2 0x15F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBA PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x2B5 JUMP JUMPDEST PUSH2 0x25E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST TIMESTAMP DUP3 LT ISZERO PUSH2 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x278D00 TIMESTAMP PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x407 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP GT ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 SLOAD DUP4 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x48E JUMP JUMPDEST PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x45D JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x201 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x2E2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x285 DUP2 PUSH2 0x593 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x29A DUP2 PUSH2 0x5AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AF DUP2 PUSH2 0x5C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CB JUMPI PUSH2 0x2CA PUSH2 0x58E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D9 DUP5 DUP3 DUP6 ADD PUSH2 0x276 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F8 JUMPI PUSH2 0x2F7 PUSH2 0x58E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x306 DUP5 DUP3 DUP6 ADD PUSH2 0x28B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x325 JUMPI PUSH2 0x324 PUSH2 0x58E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x333 DUP5 DUP3 DUP6 ADD PUSH2 0x2A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x353 JUMPI PUSH2 0x352 PUSH2 0x58E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x361 DUP6 DUP3 DUP7 ADD PUSH2 0x2A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x372 DUP6 DUP3 DUP7 ADD PUSH2 0x2A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x385 DUP2 PUSH2 0x4E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x394 DUP2 PUSH2 0x526 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3AF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x37C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3CA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x37C JUMP JUMPDEST PUSH2 0x3D7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x37C JUMP JUMPDEST PUSH2 0x3E4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x38B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x401 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x38B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x412 DUP3 PUSH2 0x526 JUMP JUMPDEST SWAP2 POP PUSH2 0x41D DUP4 PUSH2 0x526 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x452 JUMPI PUSH2 0x451 PUSH2 0x530 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x468 DUP3 PUSH2 0x526 JUMP JUMPDEST SWAP2 POP PUSH2 0x473 DUP4 PUSH2 0x526 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x483 JUMPI PUSH2 0x482 PUSH2 0x55F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499 DUP3 PUSH2 0x526 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A4 DUP4 PUSH2 0x526 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4DD JUMPI PUSH2 0x4DC PUSH2 0x530 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F3 DUP3 PUSH2 0x506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59C DUP2 PUSH2 0x4E8 JUMP JUMPDEST DUP2 EQ PUSH2 0x5A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5B3 DUP2 PUSH2 0x4FA JUMP JUMPDEST DUP2 EQ PUSH2 0x5BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5CA DUP2 PUSH2 0x526 JUMP JUMPDEST DUP2 EQ PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xAB SSTORE 0xD4 PUSH30 0x5FBF7E957579A57FE72A5336C1FE4CE64052DF334A34135CAADA7264736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "125:803:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;281:68;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;409:227;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;642:277;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;154:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;360:40;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;281:68;;;;;;;;;;;;;:::o;409:227::-;503:15;489:10;:29;;481:38;;;;;;550:10;538:8;:22;;530:31;;;;;;610:7;592:15;:25;;;;:::i;:::-;580:8;:37;;572:46;;;;;;409:227;;:::o;642:277::-;715:9;;696:15;:28;;688:37;;;;;;763:7;;744:15;:26;;736:35;;;;;;782:14;816:8;808:5;;799:6;:14;;;;:::i;:::-;:25;;;;:::i;:::-;782:42;;842:8;;;;;;;;;;;835:29;;;865:10;886:4;892:6;835:64;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;677:242;642:277;:::o;154:34::-;;;;:::o;360:40::-;;;;;;;;;;;;;;;;;:::o;7:139:2:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:329::-;499:6;548:2;536:9;527:7;523:23;519:32;516:119;;;554:79;;:::i;:::-;516:119;674:1;699:53;744:7;735:6;724:9;720:22;699:53;:::i;:::-;689:63;;645:117;440:329;;;;:::o;775:345::-;842:6;891:2;879:9;870:7;866:23;862:32;859:119;;;897:79;;:::i;:::-;859:119;1017:1;1042:61;1095:7;1086:6;1075:9;1071:22;1042:61;:::i;:::-;1032:71;;988:125;775:345;;;;:::o;1126:329::-;1185:6;1234:2;1222:9;1213:7;1209:23;1205:32;1202:119;;;1240:79;;:::i;:::-;1202:119;1360:1;1385:53;1430:7;1421:6;1410:9;1406:22;1385:53;:::i;:::-;1375:63;;1331:117;1126:329;;;;:::o;1461:474::-;1529:6;1537;1586:2;1574:9;1565:7;1561:23;1557:32;1554:119;;;1592:79;;:::i;:::-;1554:119;1712:1;1737:53;1782:7;1773:6;1762:9;1758:22;1737:53;:::i;:::-;1727:63;;1683:117;1839:2;1865:53;1910:7;1901:6;1890:9;1886:22;1865:53;:::i;:::-;1855:63;;1810:118;1461:474;;;;;:::o;1941:118::-;2028:24;2046:5;2028:24;:::i;:::-;2023:3;2016:37;1941:118;;:::o;2065:::-;2152:24;2170:5;2152:24;:::i;:::-;2147:3;2140:37;2065:118;;:::o;2189:222::-;2282:4;2320:2;2309:9;2305:18;2297:26;;2333:71;2401:1;2390:9;2386:17;2377:6;2333:71;:::i;:::-;2189:222;;;;:::o;2417:442::-;2566:4;2604:2;2593:9;2589:18;2581:26;;2617:71;2685:1;2674:9;2670:17;2661:6;2617:71;:::i;:::-;2698:72;2766:2;2755:9;2751:18;2742:6;2698:72;:::i;:::-;2780;2848:2;2837:9;2833:18;2824:6;2780:72;:::i;:::-;2417:442;;;;;;:::o;2865:222::-;2958:4;2996:2;2985:9;2981:18;2973:26;;3009:71;3077:1;3066:9;3062:17;3053:6;3009:71;:::i;:::-;2865:222;;;;:::o;3174:305::-;3214:3;3233:20;3251:1;3233:20;:::i;:::-;3228:25;;3267:20;3285:1;3267:20;:::i;:::-;3262:25;;3421:1;3353:66;3349:74;3346:1;3343:81;3340:107;;;3427:18;;:::i;:::-;3340:107;3471:1;3468;3464:9;3457:16;;3174:305;;;;:::o;3485:185::-;3525:1;3542:20;3560:1;3542:20;:::i;:::-;3537:25;;3576:20;3594:1;3576:20;:::i;:::-;3571:25;;3615:1;3605:35;;3620:18;;:::i;:::-;3605:35;3662:1;3659;3655:9;3650:14;;3485:185;;;;:::o;3676:348::-;3716:7;3739:20;3757:1;3739:20;:::i;:::-;3734:25;;3773:20;3791:1;3773:20;:::i;:::-;3768:25;;3961:1;3893:66;3889:74;3886:1;3883:81;3878:1;3871:9;3864:17;3860:105;3857:131;;;3968:18;;:::i;:::-;3857:131;4016:1;4013;4009:9;3998:20;;3676:348;;;;:::o;4030:96::-;4067:7;4096:24;4114:5;4096:24;:::i;:::-;4085:35;;4030:96;;;:::o;4132:90::-;4166:7;4209:5;4202:13;4195:21;4184:32;;4132:90;;;:::o;4228:126::-;4265:7;4305:42;4298:5;4294:54;4283:65;;4228:126;;;:::o;4360:77::-;4397:7;4426:5;4415:16;;4360:77;;;:::o;4443:180::-;4491:77;4488:1;4481:88;4588:4;4585:1;4578:15;4612:4;4609:1;4602:15;4629:180;4677:77;4674:1;4667:88;4774:4;4771:1;4764:15;4798:4;4795:1;4788:15;4938:117;5047:1;5044;5037:12;5061:122;5134:24;5152:5;5134:24;:::i;:::-;5127:5;5124:35;5114:63;;5173:1;5170;5163:12;5114:63;5061:122;:::o;5189:116::-;5259:21;5274:5;5259:21;:::i;:::-;5252:5;5249:32;5239:60;;5295:1;5292;5285:12;5239:60;5189:116;:::o;5311:122::-;5384:24;5402:5;5384:24;:::i;:::-;5377:5;5374:35;5364:63;;5423:1;5420;5413:12;5364:63;5311:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "310000",
								"executionCost": "51728",
								"totalCost": "361728"
							},
							"external": {
								"_balance(address)": "2880",
								"axsToken()": "2492",
								"launch(uint256,uint256)": "infinite",
								"price()": "2473",
								"sale(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 125,
									"end": 928,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 125,
									"end": 928,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 125,
									"end": 928,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 177,
									"end": 188,
									"name": "PUSH",
									"source": 1,
									"value": "B4"
								},
								{
									"begin": 154,
									"end": 188,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 154,
									"end": 188,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 221,
									"end": 222,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 222,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 199,
									"end": 222,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 307,
									"end": 349,
									"name": "PUSH",
									"source": 1,
									"value": "AA7726BC0CB085A3C4FBE3B09B91DD7E27F7FEA"
								},
								{
									"begin": 281,
									"end": 349,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 281,
									"end": 349,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 349,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 281,
									"end": 349,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 281,
									"end": 349,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 281,
									"end": 349,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 281,
									"end": 349,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 281,
									"end": 349,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 281,
									"end": 349,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 281,
									"end": 349,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 281,
									"end": 349,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 281,
									"end": 349,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 281,
									"end": 349,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 281,
									"end": 349,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 281,
									"end": 349,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 281,
									"end": 349,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 281,
									"end": 349,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 281,
									"end": 349,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 281,
									"end": 349,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 281,
									"end": 349,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 125,
									"end": 928,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 125,
									"end": 928,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 125,
									"end": 928,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 125,
									"end": 928,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 125,
									"end": 928,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 125,
									"end": 928,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 928,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 125,
									"end": 928,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 125,
									"end": 928,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 125,
									"end": 928,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 125,
									"end": 928,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 125,
									"end": 928,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 125,
									"end": 928,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 125,
									"end": 928,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 125,
									"end": 928,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 928,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 125,
									"end": 928,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 928,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dcab55d47d5fbf7e957579a57fe72a5336c1fe4ce64052df334a34135caada7264736f6c63430008070033",
									".code": [
										{
											"begin": 125,
											"end": 928,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 125,
											"end": 928,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 125,
											"end": 928,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 125,
											"end": 928,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 928,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 125,
											"end": 928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 125,
											"end": 928,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 125,
											"end": 928,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 928,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 125,
											"end": 928,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "PUSH",
											"source": 1,
											"value": "180DC0AC"
										},
										{
											"begin": 125,
											"end": 928,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 125,
											"end": 928,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "PUSH",
											"source": 1,
											"value": "82760CD2"
										},
										{
											"begin": 125,
											"end": 928,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 125,
											"end": 928,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "PUSH",
											"source": 1,
											"value": "96032702"
										},
										{
											"begin": 125,
											"end": 928,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 125,
											"end": 928,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "PUSH",
											"source": 1,
											"value": "A035B1FE"
										},
										{
											"begin": 125,
											"end": 928,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 125,
											"end": 928,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "PUSH",
											"source": 1,
											"value": "D3ACEAE2"
										},
										{
											"begin": 125,
											"end": 928,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 125,
											"end": 928,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 125,
											"end": 928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 928,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 928,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 281,
											"end": 349,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 281,
											"end": 349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 281,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 281,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 281,
											"end": 349,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 281,
											"end": 349,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 281,
											"end": 349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 281,
											"end": 349,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 349,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 281,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 281,
											"end": 349,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 281,
											"end": 349,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 281,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 281,
											"end": 349,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 281,
											"end": 349,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 281,
											"end": 349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 281,
											"end": 349,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 349,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 281,
											"end": 349,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 281,
											"end": 349,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 281,
											"end": 349,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 281,
											"end": 349,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 281,
											"end": 349,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 409,
											"end": 636,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 409,
											"end": 636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 409,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 409,
											"end": 636,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 409,
											"end": 636,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 409,
											"end": 636,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 409,
											"end": 636,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 409,
											"end": 636,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 409,
											"end": 636,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 409,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 409,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 409,
											"end": 636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 409,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 409,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 409,
											"end": 636,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 409,
											"end": 636,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 409,
											"end": 636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 409,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 409,
											"end": 636,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 409,
											"end": 636,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 409,
											"end": 636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 409,
											"end": 636,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 642,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 642,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 642,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 642,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 642,
											"end": 919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 642,
											"end": 919,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 642,
											"end": 919,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 642,
											"end": 919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 642,
											"end": 919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 642,
											"end": 919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 642,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 642,
											"end": 919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 642,
											"end": 919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 642,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 642,
											"end": 919,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 642,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 642,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 642,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 642,
											"end": 919,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 642,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 642,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 642,
											"end": 919,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 154,
											"end": 188,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 154,
											"end": 188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 154,
											"end": 188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 154,
											"end": 188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 154,
											"end": 188,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 154,
											"end": 188,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 154,
											"end": 188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 154,
											"end": 188,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 154,
											"end": 188,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 154,
											"end": 188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 154,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 154,
											"end": 188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 154,
											"end": 188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 154,
											"end": 188,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 154,
											"end": 188,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 154,
											"end": 188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 154,
											"end": 188,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 154,
											"end": 188,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 154,
											"end": 188,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 154,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 154,
											"end": 188,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 154,
											"end": 188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 154,
											"end": 188,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 360,
											"end": 400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 360,
											"end": 400,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 360,
											"end": 400,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 360,
											"end": 400,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 360,
											"end": 400,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 360,
											"end": 400,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 360,
											"end": 400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 360,
											"end": 400,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 360,
											"end": 400,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 360,
											"end": 400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 360,
											"end": 400,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 360,
											"end": 400,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 360,
											"end": 400,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 360,
											"end": 400,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 360,
											"end": 400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 360,
											"end": 400,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 281,
											"end": 349,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 281,
											"end": 349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 281,
											"end": 349,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 281,
											"end": 349,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 349,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 281,
											"end": 349,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 281,
											"end": 349,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 281,
											"end": 349,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 281,
											"end": 349,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 281,
											"end": 349,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 281,
											"end": 349,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 281,
											"end": 349,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 281,
											"end": 349,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 281,
											"end": 349,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 281,
											"end": 349,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 409,
											"end": 636,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 409,
											"end": 636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 518,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 499,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 489,
											"end": 518,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 489,
											"end": 518,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 481,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 481,
											"end": 519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 481,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 481,
											"end": 519,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 481,
											"end": 519,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 481,
											"end": 519,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 481,
											"end": 519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 550,
											"end": 560,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 538,
											"end": 546,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 538,
											"end": 560,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 538,
											"end": 560,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 530,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 530,
											"end": 561,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 530,
											"end": 561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 530,
											"end": 561,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 561,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 530,
											"end": 561,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 530,
											"end": 561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 610,
											"end": 617,
											"name": "PUSH",
											"source": 1,
											"value": "278D00"
										},
										{
											"begin": 592,
											"end": 607,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 592,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 592,
											"end": 617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 592,
											"end": 617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 592,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 592,
											"end": 617,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 592,
											"end": 617,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 592,
											"end": 617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 580,
											"end": 588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 580,
											"end": 617,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 580,
											"end": 617,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 572,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 572,
											"end": 618,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 572,
											"end": 618,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 572,
											"end": 618,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 572,
											"end": 618,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 572,
											"end": 618,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 572,
											"end": 618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 409,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 409,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 409,
											"end": 636,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 642,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 642,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 715,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 715,
											"end": 724,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 696,
											"end": 711,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 724,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 696,
											"end": 724,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 688,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 688,
											"end": 725,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 688,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 688,
											"end": 725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 688,
											"end": 725,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 688,
											"end": 725,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 688,
											"end": 725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 763,
											"end": 770,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 763,
											"end": 770,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 744,
											"end": 759,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 744,
											"end": 770,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 744,
											"end": 770,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 736,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 736,
											"end": 771,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 736,
											"end": 771,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 736,
											"end": 771,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 736,
											"end": 771,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 736,
											"end": 771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 782,
											"end": 796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 808,
											"end": 813,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 813,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 799,
											"end": 805,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 799,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 799,
											"end": 813,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 799,
											"end": 813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 799,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 799,
											"end": 813,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 799,
											"end": 813,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 799,
											"end": 813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 799,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 799,
											"end": 824,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 799,
											"end": 824,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 799,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 799,
											"end": 824,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 799,
											"end": 824,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 799,
											"end": 824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 782,
											"end": 824,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 782,
											"end": 824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 842,
											"end": 850,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 842,
											"end": 850,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 842,
											"end": 850,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 842,
											"end": 850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 842,
											"end": 850,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 842,
											"end": 850,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 842,
											"end": 850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 842,
											"end": 850,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 842,
											"end": 850,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 842,
											"end": 850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 835,
											"end": 864,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 835,
											"end": 864,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 835,
											"end": 864,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 865,
											"end": 875,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 886,
											"end": 890,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 892,
											"end": 898,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 835,
											"end": 899,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 835,
											"end": 899,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 835,
											"end": 899,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 835,
											"end": 899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 835,
											"end": 899,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 835,
											"end": 899,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 835,
											"end": 899,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 835,
											"end": 899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 835,
											"end": 899,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 835,
											"end": 899,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 835,
											"end": 899,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 835,
											"end": 899,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 835,
											"end": 899,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 835,
											"end": 899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 835,
											"end": 899,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 835,
											"end": 899,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 835,
											"end": 899,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 835,
											"end": 899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 835,
											"end": 899,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 835,
											"end": 899,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 835,
											"end": 899,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 835,
											"end": 899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 835,
											"end": 899,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 835,
											"end": 899,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 835,
											"end": 899,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 835,
											"end": 899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 835,
											"end": 899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 677,
											"end": 919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 642,
											"end": 919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 642,
											"end": 919,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 154,
											"end": 188,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 154,
											"end": 188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 154,
											"end": 188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 154,
											"end": 188,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 154,
											"end": 188,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 154,
											"end": 188,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 360,
											"end": 400,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 360,
											"end": 400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 360,
											"end": 400,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 360,
											"end": 400,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 400,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 360,
											"end": 400,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 400,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 400,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 360,
											"end": 400,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 769,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 440,
											"end": 769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 505,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 550,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 536,
											"end": 545,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 527,
											"end": 534,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 523,
											"end": 546,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 519,
											"end": 551,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 516,
											"end": 635,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 516,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 516,
											"end": 635,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 554,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 554,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 554,
											"end": 633,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 554,
											"end": 633,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 554,
											"end": 633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 516,
											"end": 635,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 516,
											"end": 635,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 674,
											"end": 675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 744,
											"end": 751,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 735,
											"end": 741,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 724,
											"end": 733,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 720,
											"end": 742,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 699,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 699,
											"end": 752,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 699,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 699,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 689,
											"end": 752,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 689,
											"end": 752,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 762,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 440,
											"end": 769,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 440,
											"end": 769,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 440,
											"end": 769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 440,
											"end": 769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 440,
											"end": 769,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 775,
											"end": 1120,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 775,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 842,
											"end": 848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 893,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 888,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 870,
											"end": 877,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 866,
											"end": 889,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 862,
											"end": 894,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 859,
											"end": 978,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 859,
											"end": 978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 859,
											"end": 978,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 897,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 897,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 897,
											"end": 976,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 897,
											"end": 976,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 897,
											"end": 976,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 859,
											"end": 978,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 859,
											"end": 978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1018,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1095,
											"end": 1102,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1092,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1071,
											"end": 1093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1032,
											"end": 1103,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1032,
											"end": 1103,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 988,
											"end": 1113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 775,
											"end": 1120,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 775,
											"end": 1120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 775,
											"end": 1120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 775,
											"end": 1120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 775,
											"end": 1120,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1126,
											"end": 1455,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1126,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1191,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1234,
											"end": 1236,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1222,
											"end": 1231,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1232,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1237,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1321,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1202,
											"end": 1321,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1240,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1240,
											"end": 1319,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1319,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1240,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1321,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1202,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1360,
											"end": 1361,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1430,
											"end": 1437,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1427,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1419,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1428,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1385,
											"end": 1438,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1385,
											"end": 1438,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1385,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1438,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1438,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1331,
											"end": 1448,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1126,
											"end": 1455,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1126,
											"end": 1455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1126,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1126,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1126,
											"end": 1455,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1461,
											"end": 1935,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1461,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1529,
											"end": 1535,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1588,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1583,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1572,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1584,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1589,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1673,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1554,
											"end": 1673,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1592,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1592,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1592,
											"end": 1671,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1592,
											"end": 1671,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1592,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1673,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1554,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1712,
											"end": 1713,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1737,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1782,
											"end": 1789,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1779,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1762,
											"end": 1771,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1758,
											"end": 1780,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1737,
											"end": 1790,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1737,
											"end": 1790,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1737,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1727,
											"end": 1790,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1727,
											"end": 1790,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1683,
											"end": 1800,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1839,
											"end": 1841,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1865,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1910,
											"end": 1917,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1907,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1899,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1886,
											"end": 1908,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1865,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1865,
											"end": 1918,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1865,
											"end": 1918,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1865,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1918,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1918,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1810,
											"end": 1928,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1935,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1935,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1935,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1941,
											"end": 2059,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1941,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2046,
											"end": 2051,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2023,
											"end": 2026,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2053,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 2059,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 2059,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 2059,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2065,
											"end": 2183,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2065,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2152,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2170,
											"end": 2175,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2152,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2152,
											"end": 2176,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2152,
											"end": 2176,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2152,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2150,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2140,
											"end": 2177,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2065,
											"end": 2183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2065,
											"end": 2183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2065,
											"end": 2183,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2189,
											"end": 2411,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2189,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2286,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2318,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2323,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2297,
											"end": 2323,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2297,
											"end": 2323,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2401,
											"end": 2402,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 2399,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2386,
											"end": 2403,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2333,
											"end": 2404,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2333,
											"end": 2404,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2333,
											"end": 2404,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2411,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2411,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2417,
											"end": 2859,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2417,
											"end": 2859,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2570,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2604,
											"end": 2606,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2593,
											"end": 2602,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2607,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2607,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2685,
											"end": 2686,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2674,
											"end": 2683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2670,
											"end": 2687,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2661,
											"end": 2667,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2617,
											"end": 2688,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2617,
											"end": 2688,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2617,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2698,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2766,
											"end": 2768,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2755,
											"end": 2764,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2751,
											"end": 2769,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2742,
											"end": 2748,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2698,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2698,
											"end": 2770,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2698,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2698,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2780,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2848,
											"end": 2850,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2837,
											"end": 2846,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2833,
											"end": 2851,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2824,
											"end": 2830,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2780,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2780,
											"end": 2852,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2780,
											"end": 2852,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2780,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2859,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2859,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2859,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2859,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2859,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2859,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2859,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2865,
											"end": 3087,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2865,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 2962,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2996,
											"end": 2998,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2985,
											"end": 2994,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2999,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 2999,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 2999,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3077,
											"end": 3078,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3075,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3062,
											"end": 3079,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3053,
											"end": 3059,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3009,
											"end": 3080,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3009,
											"end": 3080,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3009,
											"end": 3080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 3087,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 3087,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 3087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 3087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 3087,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3174,
											"end": 3479,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3174,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3214,
											"end": 3217,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3233,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3251,
											"end": 3252,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3233,
											"end": 3253,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3233,
											"end": 3253,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3233,
											"end": 3253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3253,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3267,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3285,
											"end": 3286,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3267,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3267,
											"end": 3287,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3267,
											"end": 3287,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3267,
											"end": 3287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3262,
											"end": 3287,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3262,
											"end": 3287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3421,
											"end": 3422,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3353,
											"end": 3419,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3349,
											"end": 3423,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3346,
											"end": 3347,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3343,
											"end": 3424,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3340,
											"end": 3447,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3340,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3340,
											"end": 3447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3427,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3427,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3427,
											"end": 3445,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3427,
											"end": 3445,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3427,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3340,
											"end": 3447,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3340,
											"end": 3447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3471,
											"end": 3472,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3469,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3464,
											"end": 3473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3457,
											"end": 3473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3457,
											"end": 3473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3479,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3485,
											"end": 3670,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3485,
											"end": 3670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3560,
											"end": 3561,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3542,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3542,
											"end": 3562,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3542,
											"end": 3562,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3542,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3537,
											"end": 3562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3537,
											"end": 3562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3594,
											"end": 3595,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3576,
											"end": 3596,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3576,
											"end": 3596,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3576,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3571,
											"end": 3596,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3571,
											"end": 3596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3615,
											"end": 3616,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3605,
											"end": 3640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3605,
											"end": 3640,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3620,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3620,
											"end": 3638,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3620,
											"end": 3638,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3620,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3605,
											"end": 3640,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3605,
											"end": 3640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3662,
											"end": 3663,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3659,
											"end": 3660,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3655,
											"end": 3664,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3485,
											"end": 3670,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3485,
											"end": 3670,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3485,
											"end": 3670,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3485,
											"end": 3670,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3485,
											"end": 3670,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3676,
											"end": 4024,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3676,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3716,
											"end": 3723,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3739,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3757,
											"end": 3758,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3739,
											"end": 3759,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3739,
											"end": 3759,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3739,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3759,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3759,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3773,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3791,
											"end": 3792,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3773,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3773,
											"end": 3793,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3773,
											"end": 3793,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3773,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3793,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3961,
											"end": 3962,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3893,
											"end": 3959,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3889,
											"end": 3963,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 3887,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 3964,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3878,
											"end": 3879,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3871,
											"end": 3880,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3864,
											"end": 3881,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3860,
											"end": 3965,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3857,
											"end": 3988,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3857,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3857,
											"end": 3988,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3968,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3968,
											"end": 3986,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3968,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3968,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3857,
											"end": 3988,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3857,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4017,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4013,
											"end": 4014,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4018,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4018,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3676,
											"end": 4024,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3676,
											"end": 4024,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3676,
											"end": 4024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3676,
											"end": 4024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3676,
											"end": 4024,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4030,
											"end": 4126,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4030,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4067,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4096,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4114,
											"end": 4119,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4096,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 4096,
											"end": 4120,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4096,
											"end": 4120,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4096,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4085,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4085,
											"end": 4120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4030,
											"end": 4126,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4030,
											"end": 4126,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4030,
											"end": 4126,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4030,
											"end": 4126,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4132,
											"end": 4222,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4132,
											"end": 4222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4173,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4209,
											"end": 4214,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4202,
											"end": 4215,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4195,
											"end": 4216,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4184,
											"end": 4216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4184,
											"end": 4216,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4132,
											"end": 4222,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4132,
											"end": 4222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4132,
											"end": 4222,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4132,
											"end": 4222,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4228,
											"end": 4354,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 4228,
											"end": 4354,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4305,
											"end": 4347,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4298,
											"end": 4303,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4348,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4283,
											"end": 4348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4283,
											"end": 4348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4228,
											"end": 4354,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4228,
											"end": 4354,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4228,
											"end": 4354,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4228,
											"end": 4354,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4360,
											"end": 4437,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4360,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4397,
											"end": 4404,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4426,
											"end": 4431,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4415,
											"end": 4431,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4415,
											"end": 4431,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4437,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4437,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4437,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4437,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4443,
											"end": 4623,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4443,
											"end": 4623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4491,
											"end": 4568,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4488,
											"end": 4489,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4481,
											"end": 4569,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4588,
											"end": 4592,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 4585,
											"end": 4586,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4578,
											"end": 4593,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4616,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4609,
											"end": 4610,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4602,
											"end": 4617,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4629,
											"end": 4809,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4629,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4677,
											"end": 4754,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4674,
											"end": 4675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4667,
											"end": 4755,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4774,
											"end": 4778,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 4771,
											"end": 4772,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4764,
											"end": 4779,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4802,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4795,
											"end": 4796,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4788,
											"end": 4803,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5055,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4938,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5047,
											"end": 5048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5044,
											"end": 5045,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5037,
											"end": 5049,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5061,
											"end": 5183,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 5061,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5134,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 5152,
											"end": 5157,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5134,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 5134,
											"end": 5158,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5134,
											"end": 5158,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 5134,
											"end": 5158,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5127,
											"end": 5132,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5124,
											"end": 5159,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 5114,
											"end": 5177,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5173,
											"end": 5174,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5170,
											"end": 5171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5163,
											"end": 5175,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5177,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 5114,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5061,
											"end": 5183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5061,
											"end": 5183,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5189,
											"end": 5305,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 5189,
											"end": 5305,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5259,
											"end": 5280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5274,
											"end": 5279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5259,
											"end": 5280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 5259,
											"end": 5280,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5259,
											"end": 5280,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5259,
											"end": 5280,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5252,
											"end": 5257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5281,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5239,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5239,
											"end": 5299,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5295,
											"end": 5296,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5292,
											"end": 5293,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5285,
											"end": 5297,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5239,
											"end": 5299,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5239,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5189,
											"end": 5305,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5189,
											"end": 5305,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5311,
											"end": 5433,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5311,
											"end": 5433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5384,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 5402,
											"end": 5407,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5384,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 5384,
											"end": 5408,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5384,
											"end": 5408,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 5384,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5377,
											"end": 5382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5409,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5364,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 5364,
											"end": 5427,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5424,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5420,
											"end": 5421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5413,
											"end": 5425,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5364,
											"end": 5427,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 5364,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5311,
											"end": 5433,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5311,
											"end": 5433,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_balance(address)": "d3aceae2",
							"axsToken()": "180dc0ac",
							"launch(uint256,uint256)": "82760cd2",
							"price()": "a035b1fe",
							"sale(uint256)": "96032702"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"axsToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_starttime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endtime\",\"type\":\"uint256\"}],\"name\":\"launch\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"buynmu\",\"type\":\"uint256\"}],\"name\":\"sale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TokenSell.sol\":\"Tokensell\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"TokenSell.sol\":{\"keccak256\":\"0x2523a63db3981d732bea026d733101e7affe433d9263d82ecf21b6eddbcccbd3\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://45adafb341cb4f4ba5c60a63f873a8e7493d5d6ffc3f8df9f46c3d17e4fab8b3\",\"dweb:/ipfs/QmUi8XgqtHtWhjWre3yANg1jnJUBHTXcqQro9sDopsTco5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 87,
								"contract": "TokenSell.sol:Tokensell",
								"label": "price",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 90,
								"contract": "TokenSell.sol:Tokensell",
								"label": "userbalance",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 92,
								"contract": "TokenSell.sol:Tokensell",
								"label": "starttime",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 94,
								"contract": "TokenSell.sol:Tokensell",
								"label": "endtime",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 97,
								"contract": "TokenSell.sol:Tokensell",
								"label": "axsToken",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 101,
								"contract": "TokenSell.sol:Tokensell",
								"label": "_balance",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"TokenSell.sol": {
				"ast": {
					"absolutePath": "TokenSell.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"Tokensell": [
							175
						]
					},
					"id": 176,
					"license": "Unlicense",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 78,
							"src": "65:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 175,
							"linearizedBaseContracts": [
								175
							],
							"name": "Tokensell",
							"nameLocation": "134:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "a035b1fe",
									"id": 87,
									"mutability": "mutable",
									"name": "price",
									"nameLocation": "169:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 175,
									"src": "154:34:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 81,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "154:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_180_by_1",
											"typeString": "int_const 180"
										},
										"id": 86,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"id": 84,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "31",
												"id": 82,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "177:1:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											"nodeType": "BinaryOperation",
											"operator": "*",
											"rightExpression": {
												"hexValue": "3130",
												"id": 83,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "181:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"src": "177:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "3138",
											"id": 85,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "186:2:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18_by_1",
												"typeString": "int_const 18"
											},
											"value": "18"
										},
										"src": "177:11:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_180_by_1",
											"typeString": "int_const 180"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 90,
									"mutability": "mutable",
									"name": "userbalance",
									"nameLocation": "207:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 175,
									"src": "199:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 88,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "199:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 89,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "221:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 92,
									"mutability": "mutable",
									"name": "starttime",
									"nameLocation": "238:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 175,
									"src": "233:14:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 91,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "233:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 94,
									"mutability": "mutable",
									"name": "endtime",
									"nameLocation": "263:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 175,
									"src": "258:12:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 93,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "258:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "180dc0ac",
									"id": 97,
									"mutability": "mutable",
									"name": "axsToken",
									"nameLocation": "296:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 175,
									"src": "281:68:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 95,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "281:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830616137373236626330634230383541334334666245334230396239314444374532376637666561",
										"id": 96,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "307:42:1",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x0aa7726bc0cB085A3C4fbE3B09b91DD7E27f7fea"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d3aceae2",
									"id": 101,
									"mutability": "mutable",
									"name": "_balance",
									"nameLocation": "392:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 175,
									"src": "360:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 100,
										"keyType": {
											"id": 98,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "368:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "360:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 99,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "379:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "470:166:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 109,
																"name": "_starttime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "489:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 110,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "503:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "503:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "489:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 108,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "481:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "481:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 114,
												"nodeType": "ExpressionStatement",
												"src": "481:38:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "_endtime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "538:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 117,
																"name": "_starttime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "550:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "538:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 115,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "530:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "530:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 120,
												"nodeType": "ExpressionStatement",
												"src": "530:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 122,
																"name": "_endtime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "580:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 123,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "592:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "592:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3330",
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "610:7:1",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2592000_by_1",
																		"typeString": "int_const 2592000"
																	},
																	"value": "30"
																},
																"src": "592:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "580:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "572:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "572:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "572:46:1"
											}
										]
									},
									"functionSelector": "82760cd2",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "launch",
									"nameLocation": "418:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "_starttime",
												"nameLocation": "430:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "425:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "425:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "_endtime",
												"nameLocation": "448:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "443:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "443:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "424:33:1"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "470:0:1"
									},
									"scope": 175,
									"src": "409:227:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "677:242:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 137,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "696:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "696:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 139,
																"name": "starttime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 92,
																"src": "715:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "696:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "688:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "688:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "688:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 144,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "744:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "744:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 146,
																"name": "endtime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "763:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "744:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 143,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "736:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "736:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "736:35:1"
											},
											{
												"assignments": [
													151
												],
												"declarations": [
													{
														"constant": false,
														"id": 151,
														"mutability": "mutable",
														"name": "paynum",
														"nameLocation": "790:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 173,
														"src": "782:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 150,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "782:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 159,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 152,
															"name": "buynmu",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "799:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 153,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "808:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "799:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "816:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3138",
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "822:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														},
														"src": "816:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														}
													},
													"src": "799:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "782:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 164,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "865:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "865:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 168,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "886:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Tokensell_$175",
																		"typeString": "contract Tokensell"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Tokensell_$175",
																		"typeString": "contract Tokensell"
																	}
																],
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "878:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 166,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "878:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "878:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 170,
															"name": "paynum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "892:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 161,
																	"name": "axsToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 97,
																	"src": "842:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 160,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "835:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "835:16:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "835:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "835:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "835:64:1"
											}
										]
									},
									"functionSelector": "96032702",
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sale",
									"nameLocation": "651:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "buynmu",
												"nameLocation": "664:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "656:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "655:16:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "677:0:1"
									},
									"scope": 175,
									"src": "642:277:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 176,
							"src": "125:803:1",
							"usedErrors": []
						}
					],
					"src": "38:890:1"
				},
				"id": 1
			}
		}
	}
}